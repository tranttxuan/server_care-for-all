{"version":3,"sources":["api/apiHandler.js","components/Auth/UserContext.jsx","components/Map/AutoComplete.jsx","components/PopUp.jsx","components/Profile/components/OtherServices.jsx","components/Profile/components/Services.jsx","components/Announcement/NewAnnouncement.jsx","components/Auth/ProtectRoute.jsx","components/Auth/withUser.jsx","components/NavMain/NavMain.jsx","components/Rate/Star.jsx","components/Rate/Rating.jsx","pages/AddReview.jsx","components/ApplyJob.jsx","components/Map/MapSearch.jsx","components/Message/FormMessage.jsx","pages/Announcements.jsx","components/Home/Banner.jsx","components/Home/Instructions.jsx","components/ReviewCard.jsx","components/Home/WebReview.jsx","pages/Home.jsx","components/FormsAuth/FormLogin.jsx","pages/Login.jsx","pages/Messages.jsx","pages/OneAnnounce.jsx","components/ButtonAddFavoriteList.jsx","components/ButtonBookingRequest.jsx","components/Carousel.jsx","utils.js","pages/OneProvider.jsx","components/Announcement/AnnouncementList.jsx","components/Profile/components/FavoriteOrBookingList.jsx","components/Message/MessageTable.jsx","components/Profile/Dashboard.jsx","components/UploadWidget.jsx","components/Profile/components/BirthdayFields.jsx","components/Profile/components/VisibilityField.jsx","components/Profile/EditProfile.jsx","pages/Profile.jsx","pages/Providers.jsx","components/FormsAuth/FormSignup.jsx","pages/Signup.jsx","App.js","components/Auth/UserProvider.jsx","index.js"],"names":["service","axios","create","baseURL","process","withCredentials","errorHandler","error","response","console","log","data","message","userInfo","post","then","res","catch","delete","get","patch","id","type","idProvider","limit","idUser","received","idMessage","UserContext","React","createContext","Autocomplete","props","state","search","results","isLoading","handleSearchChange","bind","e","this","setState","target","value","clearTimeout","timeoutId","setTimeout","performSearch","features","place","place_name","onSelect","className","defaultValue","onChange","placeholder","autoComplete","map","onClick","handleItemClicked","Component","PopUp","btnOne","btnTwo","handleBtnOne","handleBtnTwo","OtherServices","houseKeeping","shoppingAndErrands","specialNeedsCare","homeworkAssistance","handleChange","event","name","checked","editable","handleServices","htmlFor","Services","childCare","seniorCare","petCare","NewAnnouncement","title","description","formattedAddress","location","time","additionalServices","displayMessage","idPost","isEditPage","handlePlace","geometry","handleAdditionalServices","handleSubmit","preventDefault","match","params","apiHandler","_id","err","states","onSubmit","rows","history","push","window","reload","contextType","withRouter","ProtectRoute","component","render","rest","Consumer","context","isLoggedIn","Fragment","to","withUser","ComponentToExposeContextTo","exact","user","firstName","removeUser","Star","rating","startId","styleClass","height","width","viewBox","data-rating","strokeWidth","points","Rating","stars","hoverRating","inReviewCard","index","addStarRating","path","split","length","rate","rateInCard","i","style","display","star","AddReview","review","goBack","ApplyJob","applicants","submit","handleApply","didApply","includes","color","Map","ReactMapboxGl","accessToken","MapSearch","lng","lat","zoom","handleClick","onHover","position","navigator","geolocation","getCurrentPosition","latitude","coords","longitude","User","List","Search","list","coordinates","containerStyle","center","item","lastName","FormMessage","errors","err_submit","err_auth","isDisplayed","showForm","closeForm","checkValidation","isValid","sender","receiver","idReceiver","announcement","idAnnouncement","prevState","Announcements","searchCoordinates","handleSelect","author","substring","Banner","option","err_service","err_option","Instructions","ReviewCard","WebReview","Home","FormLogin","password","email","err_password","err_email","setUser","Login","Messages","messagesBox","src","image","alt","OneAnnounce","ButtonAddFavoriteList","isFavorite","addToFavorite","isFavorited","favoriteProviders","isAdded","ButtonBookingRequest","bookingList","booking","bookedProvider","Carousel","activeIndex","goToSlide","goToPrevSlide","slidesLength","reviews","goToNextSlide","slide","getAge","date","today","Date","diff","Math","floor","buildFormData","formData","parentKey","File","append","Object","keys","forEach","key","averageRates","sum","OneProvider","provider","seeMore","getData","handleBack","experiences","availability","age","birthday","isInFavList","pathname","AnnouncementList","handleDelete","backgroundColor","ann","createdAt","toString","substr","applicant","idApp","colSpan","FavoriteOrBookingList","isFavList","filter","MessageTable","inSentBox","GotoReceivedBox","GoToSentBox","Dashboard","flexDirection","UploadWidget","forwardRef","ref","children","file","files","tempURL","URL","createObjectURL","onFileSelect","BirthdayFields","day","month","year","handleBirthday","birthdayValue","required","VisibilityField","isProvider","handleVisibility","EditProfile","err_birthday","err_lastName","err_firstName","showPopUP","imageRef","createRef","handleFileSelect","tempUrl","test","undefined","isValidBirthday","currentDate","fd","FormData","current","phoneNumber","Profile","defaultChecked","Providers","marginBottom","FormSignup","Signup","App","UserProvider","contextValue","Provider","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b2969c0c.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst service = axios.create({\n      // baseURL: 'http://localhost:4000/api',\n      baseURL: process.env.REACT_APP_BACKEND_URL + '/api',\n      withCredentials: true,\n});\n\nfunction errorHandler(error) {\n      if (error.response) {\n            console.log(error.response.data.message);\n            throw error.response.data;\n      }\n      throw error;\n}\n\nexport default {\n      service,\n      //*******/ \n      // Auth\n      //*******/ \n      signup(userInfo) {\n            return service\n                  .post(\"/auth/signup\", userInfo)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n\n      login(userInfo) {\n            return service\n                  .post(\"/auth/login\", userInfo)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n\n      logout() {\n            return service.delete(\"/auth/logout\").catch(errorHandler);\n      },\n\n      isLoggedIn() {\n            return service\n                  .get(\"/auth/isLoggedIn\")\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n\n      updateProfile(data) {\n            return service\n                  .patch(\"/auth/update\", data)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n\n      getProfile() {\n            return service\n                  .get(\"/auth/profile\")\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n      //*******/ \n      // Announcement\n      //*******/ \n      createAnnouncement(data) {\n            return service\n                  .post(\"/announcements/new\", data)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n      getOneAnnouncement(id) {\n            return service\n                  .get(`/announcements/one/${id}`)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n      updateOneAnnouncement(data, id) {\n            return service\n                  .patch(`/announcements/update/${id}`, data)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n      deleteOneAnnouncement(id) {\n            return service\n                  .delete(`/announcements/delete/${id}`)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n      getAnnouncementsByAuthor(id) {\n            return service\n                  .get(`/announcements/author/${id}`)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n\n      getAnnouncementsByService(type) {\n            return service\n                  .get(`/announcements/${type}`)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n\n      applyForJob(id) {\n            return service\n                  .post(`/announcements/apply/${id}`)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n\n      cancelApplication(id) {\n            return service\n                  .post(`/announcements/no-apply/${id}`)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n\n      //*******/ \n      // Review\n      //*******/\n      addReview(data, id) {\n            return service\n                  .post(`/reviews/create/${id}`, data)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n\n      //*******/ \n      // Review for website\n      //*******/\n      addWebReview(data) {\n            return service\n                  .post(`/web-reviews`, data)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n      getWebReview() {\n            return service\n                  .get(`/web-reviews`)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n\n\n      //*******/ \n      // Provider\n      //*******/\n      //Added to favorite list\n      addToFavoriteList(idProvider) {\n            return service\n                  .post(`/providers/favorite/${idProvider}`)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n\n      takeOffFavoriteList(idProvider) {\n            return service\n                  .post(`/providers/no-favorite/${idProvider}`)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n\n      getOneProvider(idProvider, limit) {\n            return service\n                  .get(`/providers/one/${idProvider}?limit=${limit}`)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n      //Send a booking request\n      sendBookingRequest(idProvider) {\n            return service\n                  .post(`/providers/booking/${idProvider}`)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n      cancelBookingRequest(idProvider) {\n            return service\n                  .post(`/providers/no-booking/${idProvider}`)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n      deleteBookingByCurrentUser(idUser) {\n            return service\n                  .post(`/providers/no-booking/user/${idUser}`)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n      getProvidersByService(type) {\n            return service\n                  .get(`/providers/${type}`)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n\n      //*******/ \n      // Message\n      //*******/\n      sendMessage(data) {\n            return service\n                  .post(\"/messages\", data)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n      getMessages(idUser, received) {\n            return service\n                  .get(`/messages/${idUser}/${received}`)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n      getThread(idMessage) {\n            return service\n                  .get(`/messages/${idMessage}`)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n      addNewMessage(idMessage, data) {\n            return service\n                  .patch(`/messages/add/${idMessage}`, data)\n                  .then((res) => res.data)\n                  .catch(errorHandler);\n      },\n\n};","import React from 'react';\n\nconst UserContext = React.createContext();\n\nexport default UserContext;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"../../styles/AutoComplete.css\";\n\nclass Autocomplete extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: \"\",\n      results: [],\n      isLoading: false,\n    };\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n  }\n  handleSearchChange(e) {\n    this.setState({\n      search: e.target.value,\n      isLoading: true,\n    });\n\n    // Stop the previous setTimeout if there is one in progress\n    clearTimeout(this.timeoutId);\n\n    // Launch a new request\n    this.timeoutId = setTimeout(() => {\n      this.performSearch();\n    }, 1000);\n  }\n\n  performSearch() {\n    if (this.state.search === \"\") {\n      this.setState({\n        results: [],\n        isLoading: false,\n      });\n      return;\n    }\n    axios\n      .get(\n        // `https://api.mapbox.com/geocoding/v5/mapbox.places/${this.state.search}.json?access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`\n        `https://api.mapbox.com/geocoding/v5/mapbox.places/${this.state.search}.json?access_token=pk.eyJ1IjoidHJhbngiLCJhIjoiY2tqZzR2M2RhMG1mNjJ5bG9wbTF2Z3EwaSJ9.s4CffQ9GjURVeHVpgekb1A`\n      )\n      .then((response) => {\n        this.setState({\n          results: response.data.features,\n          isLoading: false,\n        });\n      });\n  }\n\n  handleItemClicked(place) {\n    this.setState({\n      search: place.place_name,\n      results: [],\n    });\n\n    this.props.onSelect(place);\n  }\n\n  render() {\n    const { results, isLoading } = this.state;\n    return (\n      <div className=\"AutocompletePlace\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          value={this.props.defaultValue || this.state.search}\n          onChange={this.handleSearchChange}\n          placeholder=\"Enter your address\"\n          autoComplete=\"off\"\n        />\n        <ul className=\"AutocompletePlace-results\">\n          {results.map((place) => (\n            <li\n              key={place.id}\n              className=\"AutocompletePlace-items\"\n              onClick={() => this.handleItemClicked(place)}\n            >\n              {place.place_name}\n            </li>\n          ))}\n          {isLoading && <li className=\"AutocompletePlace-items\">Loading...</li>}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Autocomplete;\n","import React from 'react'\nimport \"../styles/PopUp.css\";\n\nfunction PopUp({ message,btnOne, btnTwo, handleBtnOne, handleBtnTwo }) {\n      return (\n            <div className=\"PopUp\">\n                  <div className=\"PopUp__container\">\n                        <h1>{message}</h1>\n                        <div>\n                        {btnOne && <button onClick={e => handleBtnOne(e)}>{btnOne}</button>}\n                        <button onClick={e => handleBtnTwo(e)}>{btnTwo}</button>\n                           \n                        </div>\n                  </div>\n            </div>\n\n      )\n}\n\nexport default PopUp\n","import React, { Component, Fragment } from 'react'\n\nexport default class OtherServices extends Component {\n      state = {\n            houseKeeping: '',\n            shoppingAndErrands: \"\",\n            specialNeedsCare: \"\",\n            homeworkAssistance: \"\"\n      }\n      handleChange = (event) => {\n            const { name, checked } = event.target\n            if (this.props.editable === \"false\") {\n                  this.setState({ [name]: this.state.name })\n            } else {\n                  this.setState({ [name]: checked })\n                  this.props.handleServices(name, checked);\n            }\n\n      }\n      componentDidMount() {\n            if (this.props.defaultValue) {\n                  const { houseKeeping, shoppingAndErrands, specialNeedsCare, homeworkAssistance } = this.props.defaultValue\n                  this.setState({ houseKeeping, shoppingAndErrands, specialNeedsCare, homeworkAssistance })\n            }\n      }\n      render() {\n            return (\n                  <div>\n                        <Fragment>\n                              <label className='label' htmlFor=\"houseKeeping\">House Keeping</label>\n                              <input\n                                    id=\"houseKeeping\"\n                                    type=\"checkbox\"\n                                    name=\"houseKeeping\"\n                                    onChange={this.handleChange}\n                                    checked={this.state.houseKeeping}\n\n                              />\n\n                              <label className='label' htmlFor=\"shoppingAndErrands\">Shopping And Errands</label>\n                              <input\n                                    id=\"shoppingAndErrands\"\n                                    type=\"checkbox\"\n                                    name=\"shoppingAndErrands\"\n                                    onChange={this.handleChange}\n                                    checked={this.state.shoppingAndErrands}\n                              />\n\n                              <label className='label' htmlFor=\"specialNeedsCare\">Special needs care</label>\n                              <input\n                                    id=\"specialNeedsCare\"\n                                    type=\"checkbox\"\n                                    name=\"specialNeedsCare\"\n                                    onChange={this.handleChange}\n                                    checked={this.state.specialNeedsCare}\n                              />\n\n                              <label className='label' htmlFor=\"homeworkAssistance\">Homework Assistance</label>\n                              <input\n                                    id=\"homeworkAssistance\"\n                                    type=\"checkbox\"\n                                    name=\"homeworkAssistance\"\n                                    onChange={this.handleChange}\n                                    checked={this.state.homeworkAssistance}\n\n                              />\n                        </Fragment>\n                  </div>\n            )\n      }\n}\n","import React, { Component } from 'react'\n\nexport default class Services extends Component {\n      state = {\n            childCare: \"\",\n            seniorCare: \"\",\n            petCare: \"\"\n      }\n      handleChange = (event) => {\n            const { name, checked } = event.target\n            if (this.props.editable === \"false\") {\n                  this.setState({ [name]: this.state.[name] })\n            } else {    \n                  this.setState({ [name]: checked })\n                  this.props.handleServices(name, checked);\n            }\n \n      }\n      componentDidMount() {\n            if (this.props.defaultValue) {\n                  const { childCare, seniorCare, petCare } = this.props.defaultValue\n                  this.setState({ childCare: childCare, seniorCare: seniorCare, petCare: petCare })\n            }\n      }\n      render() {\n            // console.log(this.state)\n            return (\n                  <div>\n                        <label className='label' htmlFor=\"childCare\">Child care</label>\n                        <input\n                              id=\"childCare\"\n                              type=\"checkbox\"\n                              name=\"childCare\"\n                              onChange={this.handleChange}\n                              checked={this.state.childCare}\n                        />\n\n                        <label className='label' htmlFor=\"seniorCare\">Senior care</label>\n                        <input\n                              id=\"seniorCare\"\n                              type=\"checkbox\"\n                              name=\"seniorCare\"\n                              onChange={this.handleChange}\n                              checked={this.state.seniorCare}\n                        />\n\n                        <label className='label' htmlFor=\"petCare\">Pet care</label>\n                        <input\n                              id=\"petCare\"\n                              type=\"checkbox\"\n                              name=\"petCare\"\n                              onChange={this.handleChange}\n                              checked={this.state.petCare}\n                        />\n                  </div>\n            )\n      }\n}\n","import React, { Component, Fragment } from 'react'\nimport { withRouter } from 'react-router-dom';\nimport apiHandler from '../../api/apiHandler';\nimport UserContext from '../Auth/UserContext'\nimport AutocompletePlace from '../Map/AutoComplete';\nimport PopUp from '../PopUp';\nimport OtherServices from '../Profile/components/OtherServices';\nimport Services from '../Profile/components/Services';\nclass NewAnnouncement extends Component {\n      static contextType = UserContext;\n      state = {\n            title: '',\n            description: '',\n            formattedAddress: '',\n            location: '',\n            time: '',\n            service: null,\n            additionalServices: null,\n            displayMessage: false,\n            idPost: '',\n            isEditPage: false,\n            error: ''\n\n      }\n      componentDidMount() {\n\n            if (this.props.match.params.idPost) {\n                  this.setState({ isEditPage: true, displayMessage: false,  })\n                  apiHandler.getOneAnnouncement(this.props.match.params.idPost)\n                        .then(data => {\n                              const { title, description, formattedAddress, service, additionalServices, time } = data;\n                              this.setState({ title, description, formattedAddress, service, additionalServices, time });\n                        })\n                        .catch(err => console.log(err))\n            }\n      }\n\n\n      handleChange = (event) => {\n            const { name, value } = event.target;\n            this.setState({ [name]: value });\n      }\n      handlePlace = (place) => {\n            const location = place.geometry;\n            const formattedAddress = place.place_name;\n            this.setState({ location, formattedAddress })\n      }\n      handleServices = (name, checked) => {\n            console.log(\"service\", name, checked)\n            this.setState({ service: { ...this.state.service, [name]: checked } })\n      }\n      handleAdditionalServices = (name, checked) => {\n            this.setState({ additionalServices: { ...this.state.additionalServices, [name]: checked } })\n      }\n      handleSubmit = (event) => {\n            event.preventDefault();\n            const { error, isEditPage, idPost, displayMessage, ...data } = this.state;\n            if (this.props.match.params.idPost) {\n                  console.log(data)\n                  apiHandler.updateOneAnnouncement(data, this.props.match.params.idPost)\n                        .then(data => {\n                              this.setState({ displayMessage: true, idPost: data._id });\n                        })\n                        .catch(err => {\n                              this.setState({ error: err.message })\n                        });\n            } else {\n                  apiHandler.createAnnouncement(data)\n                        .then(data => {\n                              this.setState({ displayMessage: true, idPost: data._id });\n                        })\n                        .catch(err => {\n                              this.setState({ error: err.message })\n                        })\n            }\n      }\n\n      render() {\n            const { error, displayMessage, idPost, isEditPage, ...states } = this.state\n            const { service, time, title, description, additionalServices, formattedAddress } = states;\nconsole.log(\"value\", service, additionalServices)\n            return (\n                  <Fragment>\n                        {error && <p>error</p>}\n                        <form onSubmit={this.handleSubmit}>\n                              <div className=\"block\">\n                                    <h2>What kind of service do you offer?</h2>\n                                    <div className=\"form-group\">\n                                          {!this.props.match.params.idPost\n                                                ? (<Services\n                                                      defaultValue={service}\n                                                      handleServices={this.handleServices}\n                                                />)\n                                                : [service && <Services\n                                                      defaultValue={service}\n                                                      handleServices={this.handleServices}\n                                                />]\n                                          }\n\n                                    </div>\n\n                                    <h2>Other service</h2>\n                                    <div className=\"form-group\">\n                                          {!this.props.match.params.idPost\n                                                ? (<OtherServices\n                                                      defaultValue={this.state.additionalServices}\n                                                      handleServices={this.handleAdditionalServices}\n                                                />)\n                                                : [additionalServices && <OtherServices\n                                                      defaultValue={additionalServices}\n                                                      handleServices={this.handleAdditionalServices}\n                                                />]\n                                          }\n\n                                    </div>\n                              </div>\n\n                              <div className=\"block\">\n                                    <div className=\"form-group\">\n                                          <label className='label' htmlFor=\"title\">Title</label>\n                                          <input\n                                                id=\"title\"\n                                                type=\"text\"\n                                                name=\"title\"\n                                                value={title}\n                                                onChange={this.handleChange}\n                                          />\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                          <label className='label' htmlFor=\"description\">Description</label>\n                                          <textarea\n                                                rows=\"10\"\n                                                id=\"description\"\n                                                type=\"text\"\n                                                name=\"description\"\n                                                value={description}\n                                                onChange={this.handleChange}\n                                          />\n                                    </div>\n                              </div>\n\n                              <div className=\"block\">\n                                    <div className=\"form-group\">\n                                          <label className='label' htmlFor=\"formattedAddress\">Address</label>\n                                          {this.props.match.params.idPost\n                                                && <p>Your current address: {formattedAddress}</p>}\n                                          <AutocompletePlace onSelect={this.handlePlace} />\n                                    </div>\n\n\n                                    <div className=\"form-group\">\n                                          <label className='label' htmlFor=\"time\">Time</label>\n                                          <input\n                                                id=\"time\"\n                                                type=\"text\"\n                                                name=\"time\"\n                                                value={time}\n                                                onChange={this.handleChange}\n                                          />\n                                    </div>\n                              </div>\n\n                              <button>{isEditPage ? \"Edit\" : \"Post\"}</button>\n                        </form>\n                        {displayMessage && <PopUp\n                              message={isEditPage ? \"Successfully updated this announcement\" : \"Successfully posted an announcement\"}\n                              btnOne=\"Edit\"\n                              handleBtnOne={() => {\n                                    this.props.history.push(`/announcements/edit/${idPost}`)\n                                    window.location.reload();\n                              }}\n                              btnTwo=\"Dashboard\"\n                              handleBtnTwo={() => this.props.history.push(\"/profile\")}\n\n                        />}\n                  </Fragment>\n            )\n      }\n}\n\nexport default withRouter(NewAnnouncement);","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport UserContext from './UserContext'\n\nfunction ProtectRoute({ component: Component, render, ...rest }) {\n    return (\n        <UserContext.Consumer>\n            {context => {\n                if (context.isLoading) {\n                    return <div>Loading ...</div>\n                }\n\n                if (context.isLoggedIn) {\n                    return (\n                        <React.Fragment>\n                            {render && <Route {...rest} render={render} />}\n                            {!render && <Route {...rest} component={Component} />}\n                        </React.Fragment>\n                    )\n                } else {\n                    return <Redirect to=\"/login\" />\n                }\n            }}\n        </UserContext.Consumer>\n    )\n}\n\nexport default ProtectRoute\n","import React from 'react';\nimport UserContext from \"./UserContext\";\n\nconst withUser = (ComponentToExposeContextTo) => (props) => {\n      return (\n            <UserContext.Consumer>\n                  {(context) => <ComponentToExposeContextTo {...props} context={context} />}\n            </UserContext.Consumer>\n      )\n}\n\nexport default withUser;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport withUser from \"../Auth/withUser\"\nimport \"../../styles/NavMain.css\";\n\nfunction NavMain(props) {\n      const { context } = props;\n\n      const handleLogout = () => {\n            context.removeUser();\n      }\n\n      return (\n\n\n            <nav>\n                  <NavLink exact to=\"/\">HOME</NavLink>\n\n                  <ul>\n                        {context.isLoggedIn && (\n                              <React.Fragment>\n                                    <li>\n                                          <NavLink to=\"/\">Message???</NavLink>\n                                    </li>\n                                    <li className=\"container-icon\">\n                                          <p className=\"icon\">Icon-YOU</p>\n                                          <ul className=\"after-icon\">\n                                                <li>Hello <strong>{context.user.firstName}</strong></li>\n                                                <li> <NavLink to=\"/profile\">Your profile</NavLink></li>\n                                                <li onClick={handleLogout}>Log out</li>\n                                          </ul>\n                                    </li>\n\n\n                              </React.Fragment>\n                        )}\n\n                        {!context.isLoggedIn&& (\n                              <React.Fragment>\n                                    <li><NavLink to=\"/signup\">Sign up</NavLink> </li>\n                                    <li><NavLink to=\"/login\">Log in</NavLink></li>\n                              </React.Fragment>\n                        )}\n\n\n                  </ul>\n\n            </nav>\n      )\n}\n\nexport default withUser(NavMain);\n","import React from 'react'\n\nfunction Star({ rating, startId, onClick }) {\n      let styleClass = 'star-rating-blank';\n      if (rating && rating >= startId) {\n            styleClass = 'star-rating-filled'\n      }\n      return (\n            <div onClick={onClick} >\n                  <svg height=\"20px\"\n                        width=\"23px\"\n                        className={styleClass}\n                        viewBox=\"0 0 25 23\"\n                        data-rating=\"1\">\n                        <polygon\n                              strokeWidth=\"0\"\n                              points=\"9.9, 1.1, 3.3, 21.78, 19.8, 8.58, 0, 8.58, 16.5, 21.78\"\n                        />\n                  </svg>\n            </div>\n\n      )\n}\n\nexport default Star\n","import React, { Component } from 'react'\nimport Star from './Star';\nimport \"../../styles/Review.css\"\nimport { withRouter } from 'react-router-dom';\n\nclass Rating extends Component {\n      state = {\n            stars: [1, 2, 3, 4, 5],\n            hoverRating: 0,\n            rating: 0,\n            inReviewCard: false,\n      }\n      componentDidMount() {\n            //use for provider's page\n            if (this.props.match.path === \"/profile\") {\n                  this.setState({ inReviewCard: false })\n            }\n            if (this.props.match.path.split(\"/\")[this.props.match.path.split(\"/\").length - 1] !== \"review\" && this.props.match.path !== \"/profile\") {\n                  this.setState({ rating: this.props.rate, inReviewCard: true })\n            }\n            // console.log(\"youre here\", this.props.match.path)\n\n      }\n      onClick = (index) => {\n            if (!this.state.inReviewCard) {\n                  this.setState({ rating: index });\n                  this.props.addStarRating(index)\n            }\n      }\n      render() {\n            const { stars, rating, inReviewCard } = this.state;\n            const rateInCard = [];\n            for (let i = 1; i < rating + 1; i++) {\n                  rateInCard.push(i)\n            }\n     \n            return (\n                  <div>\n                        {!inReviewCard && <h3>Star Rating</h3>}\n                        <div style={{ display: 'flex' }}>\n\n                              {inReviewCard\n                                    ? rateInCard.map((star, index) => {\n                                          return (\n                                                <Star\n                                                      key={index}\n                                                      startId={index}\n                                                      rating={rating}\n                                                      onClick={() => this.onClick(index)}\n                                                />\n                                          )\n                                    })\n                                    : stars.map((star, index) => {\n                                          return (\n                                                <Star\n                                                      key={index}\n                                                      startId={index}\n                                                      rating={rating}\n                                                      onClick={() => this.onClick(index)}\n                                                />\n                                          )\n                                    })\n                              }\n                        </div>\n\n                  </div>\n            )\n      }\n}\nexport default withRouter(Rating);","import React, { Component, Fragment } from 'react'\nimport apiHandler from '../api/apiHandler';\nimport PopUp from '../components/PopUp';\nimport Rating from '../components/Rate/Rating';\nimport { withRouter } from 'react-router-dom';\n\nclass AddReview extends Component {\n      state = {\n            review: '',\n            rate: '',\n            error: '',\n            displayMessage: false\n      }\n      handleChange = (event) => {\n            this.setState({ [event.target.name]: event.target.value });\n      }\n      addStarRating = (rate) => {\n            this.setState({ rate: rate + 1 })\n      }\n      handleSubmit = (event) => {\n            event.preventDefault();\n            const { displayMessage, error, ...data } = this.state;\n            if (data.review === '') {\n                  this.setState({ error: \"Write your review\" })\n                  setTimeout(() => {\n                        this.setState({ error: \"\" })\n                  }, 3000);\n            } else {\n                  // console.log(\"data\", data)\n                  if (this.props.match.params.idProvider) {\n                        apiHandler.addReview(data, this.props.match.params.idProvider)\n                              .then(response => {\n                                    if (response.message === \"Successfully added a review\") {\n                                          this.setState({ displayMessage: true });\n                                    } else {\n                                          this.setState({ error: response.message })\n                                    }\n                              })\n                              .catch(err => {\n                                    console.log(err.message)\n                                    this.setState({ error: err.message })\n                              })\n                  } else {\n                        console.log(\"data\", data)\n                        apiHandler.addWebReview(data)\n                              .then(response => {\n                                    this.setState({ displayMessage: true });\n                              })\n                              .catch(err => {\n                                    console.log(err.message)\n                                    this.setState({ error: err.message })\n                              })\n                  }\n\n            }\n\n      }\n      render() {\n            return (\n                  <Fragment>\n                        <h2>Your review for <strong>{this.props.location.state?.name}</strong></h2>\n                        {this.state.error && <p>{this.state.error}</p>}\n                        <form onSubmit={this.handleSubmit}>\n                              <div className=\"form-group\">\n                                    <label className='label' htmlFor=\"review\">Write your reviews:</label>\n                                    <textarea\n                                          id=\"review\"\n                                          rows=\"5\"\n                                          type=\"text\"\n                                          name=\"review\"\n                                          value={this.state.review}\n                                          onChange={this.handleChange}\n                                    />\n                              </div>\n\n                              <Rating addStarRating={this.addStarRating} />\n                              <button>Add Review</button>\n                        </form>\n                        {this.state.displayMessage &&\n                              <PopUp\n                                    message=\"Successfully added a review\"\n                                    btnOne=\"Back\"\n                                    btnTwo=\"Home\"\n                                    handleBtnOne={() => this.props.history.goBack()}\n                                    handleBtnTwo={() => this.props.history.push(\"/\")}\n                              />\n                        }\n                  </Fragment>\n            )\n      }\n}\nexport default withRouter(AddReview);","import React, { Component, Fragment } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport apiHandler from '../api/apiHandler'\nimport UserContext from './Auth/UserContext';\n\nexport default class ApplyJob extends Component {\n      static contextType = UserContext;\n      state = {\n            applicants:[],\n            error: '',\n            submit: ''\n      }\n      componentDidMount() {\n            this.setState({ applicants :  this.props.applicants})\n\n      }\n      handleApply = () => {\n           \n            if (!this.didApply()) {\n                 \n                  apiHandler.applyForJob(this.props.id)\n                        .then(response => {\n                              console.log(\"check\", response)\n                              this.setState({applicants: response.applicants})\n                        })\n                        .catch(err => { this.setState({ error: \"Sign in to apply this job \" }) })\n            } else {\n                  apiHandler.cancelApplication(this.props.id)\n                        .then(response =>  this.setState({applicants: response.applicants}))\n                        .catch(err => { this.setState({ error: \"Sign in to apply this job \" }) })\n            }\n\n      }\n      didApply = () =>{\n            return this.state.applicants?.includes(this.context.user?._id)\n      }\n      render() {\n            return (\n                  <Fragment >\n                        <button onClick={this.handleApply} style={{ color: this.didApply() && \"green\" }}>\n                              <p>{this.didApply() ? \"Applied\" : \"Apply now!\"}</p>\n                        </button>\n                        {this.state.error && <p>{this.state.error} <NavLink to=\"/login\">Log in</NavLink></p>}\n\n                  </Fragment>\n            )\n      }\n}\n","import React, { Component } from 'react';\nimport ReactMapboxGl, { Marker } from 'react-mapbox-gl';\nimport { withRouter } from 'react-router-dom';\nimport \"../../styles/Map.css\"\n\nconst Map = ReactMapboxGl({\n      accessToken: process.env.REACT_APP_MAPBOX_TOKEN,\n});\n\n\n\nclass MapSearch extends Component {\n      state = {\n            lng: 2.349014, // Default lng and lat set to the center of paris.\n            lat: 48.864716,\n            zoom: 12, // used for map zoom level\n      };\n\n      componentDidMount() {\n            // Get users geo location and set it as the state so the map centers relative to the users current location. :)\n            const success = (position) => {\n                  const latitude = position.coords.latitude;\n                  const longitude = position.coords.longitude;\n                  this.setState({ lat: latitude, lng: longitude });\n            };\n\n            const error = () => {\n                  console.log(\"An error occured geolocating user\");\n            };\n\n            if (!navigator.geolocation) {\n                  console.log(\"Geolocation not supported\");\n            } else {\n                  navigator.geolocation.getCurrentPosition(success, error);\n            }\n      }\n\n      handleClick = (user) => {\n            if (this.props.match.path.includes(\"/providers/\")) {\n                  this.props.history.push(`/provider/${user._id}`)\n            } else {\n                  this.props.history.push(`/announcements/${user._id}`)\n            }\n      }\n      onHover = () => {\n            return <p style={{ position: \"absolute\" }}>Your position</p>\n      }\n\n      render() {\n            // list is an object\n            let User, List, Search;\n            if (this.props.user) {\n                  User = this.props.user;\n            }\n            if (this.props.list) {\n                  List = this.props.list;\n            }\n            if (this.props.search) {\n                  Search = this.props.search.coordinates\n            }\n\n            return (\n                  <div>\n\n                        <Map\n                              style={\"mapbox://styles/mapbox/streets-v9\"}\n                              zoom={[8]}\n                              containerStyle={{\n                                    height: \"20vh\",\n                                    width: \"80vw\",\n                              }}\n                              center={Search || [this.state.lng, this.state.lat]}\n                        >\n                              {/* EACH PROVIDER / EACH ANNOUNCEMENT */}\n                              {User && User.coordinates.length !== 0 && <Marker\n\n                                    coordinates={User.coordinates}\n                                    onClick={(e => this.handleClick(User))}\n                              >\n                                    <i className=\"fas fa-bullseye marker user\"></i>\n                                    <p>Page's address</p>\n                              </Marker>}\n\n                              {/* Providers / Announcements page  */}\n                              {List && List.map((item, id) => {\n                                    return (\n                                          item.location && item.location.coordinates.length !== 0\n                                          && <Marker\n                                                key={id}\n                                                coordinates={item.location.coordinates}\n                                                onClick={(e => this.handleClick(item))}\n                                          >\n                                                <i className=\"fas fa-map-marker-alt marker item\"></i>\n                                                <p>{item.lastName} {item.firstName}</p>\n\n                                          </Marker>\n\n                                    )\n                              })}\n\n\n                              {/* YOUR CURRENT POSITION  */}\n                              <Marker\n                                    coordinates={[this.state.lng, this.state.lat]}\n\n                              >\n                                    <i className=\"fas fa-map-marker-alt marker current\"></i>\n                                    <p>Your position</p>\n                              </Marker>\n\n                              {/* SEARCH  */}\n                              {Search && <Marker\n                                    coordinates={Search}\n\n                              >\n                                    <i className=\"fas fa-map-marker-alt marker search\"></i>\n                                    <p>Your search position</p>\n                              </Marker>}\n                        </Map>\n                  </div >\n            )\n      }\n}\nexport default withRouter(MapSearch)","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom';\nimport apiHandler from '../../api/apiHandler';\nimport UserContext from '../Auth/UserContext'\nimport \"../../styles/FormMessage.css\"\n\n\nclass FormMessage extends Component {\n      static contextType = UserContext;\n      state = {\n            message: '',\n            errors: {\n                  err_submit: '',\n                  err_auth: ''\n            },\n            isDisplayed: false\n      }\n      showForm = () => {\n            this.setState({ isDisplayed: true })\n      }\n      closeForm = () => {\n            this.setState({ isDisplayed: false })\n      }\n      handleChange = (event) => {\n            this.setState({ message: event.target.value })\n      }\n      checkValidation = () => {\n            let isValid = true;\n            let errors = {}\n            if (this.state.message === '') {\n                  errors.err_submit = \"Please write your message\"\n                  isValid = false;\n            }\n\n            if (!this.context.user) {\n                  errors.err_auth = `Please log in before sending a message`\n                  isValid = false;\n            }\n            this.setState({ errors: errors })\n            setTimeout(() => {\n                  this.setState({ errors: {} })\n            }, 5000);\n            return isValid;\n      }\n      handleSubmit = (event) => {\n            event.preventDefault();\n            if (this.checkValidation()) {\n                  const data = {};\n                  data.sender = this.context.user._id;\n                  data.receiver = this.props.idReceiver;\n                  data.message = this.state.message;\n                  data.announcement = this.props.idAnnouncement;\n                  console.log(data)\n                  apiHandler.sendMessage(data)\n                        .then(response => {\n                              console.log(\"check here\", response)\n                              if (data.message === \"You are sending a message to yourself!\") {\n                                    this.setState(prevState => ({\n                                          errors: { ...prevState.errors, err_submit: response.message }\n                                    }))\n                              } else {\n                                    this.setState(prevState => ({\n                                          errors: { ...prevState.errors, err_submit: \"Your message sent\" }\n                                    }))\n                                    setTimeout(() => {\n                                          this.setState({ isDisplayed: false })\n                                    }, 5000);\n                              }\n                        })\n                        .catch(err => {\n                              this.setState(prevState => ({\n                                    errors: { ...prevState.errors, err_submit: err.message }\n                              }))\n                              setTimeout(() => {\n                                    this.setState({ isDisplayed: false })\n                              }, 3000);\n                        }\n\n                        )\n            }\n      }\n\n      render() {\n\n            return (\n                  <div>\n                        <button onClick={this.showForm}>Contact</button>\n\n                        <div className=\"contact-announcement\"\n                              style={{ display: this.state.isDisplayed ? \"block\" : \"none\" }}\n                        >\n                              <form onSubmit={this.handleSubmit} >\n                                    <h4>Announcement title: {this.props.title}</h4>\n\n                                    <label htmlFor=\"message\">Your message</label>\n                                    <textarea\n                                          rows=\"10\"\n                                          value={this.state.message}\n                                          name=\"message\"\n                                          onChange={this.handleChange}\n                                    />\n                                    <button>Send</button>\n                                    {this.state.errors.err_submit && <p>{this.state.errors.err_submit}</p>}\n                                    {this.state.errors.err_auth\n                                          && <p>{this.state.errors.err_auth}\n                                                <strong><NavLink to=\"/login\">Log in</NavLink></strong></p>}\n                              </form>\n                              <button onClick={this.closeForm} >Xxx</button>\n                        </div>\n\n                  </div>\n            )\n      }\n}\nexport default FormMessage","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom';\nimport apiHandler from '../api/apiHandler';\nimport ApplyJob from '../components/ApplyJob';\nimport UserContext from '../components/Auth/UserContext';\nimport Autocomplete from '../components/Map/AutoComplete';\nimport MapSearch from '../components/Map/MapSearch';\nimport FormMessage from '../components/Message/FormMessage';\n\n\nexport default class Announcements extends Component {\n      static contextType = UserContext;\n      state = {\n            list: [],\n            searchCoordinates: []\n\n      }\n      componentDidMount() {\n            const service = this.props.match.params.service;\n            apiHandler.getAnnouncementsByService(service)\n                  .then(data => this.setState({ list: data }))\n                  .catch(err => console.log(err))\n      }\n      handleSelect = (place) => {\n            this.setState({ searchCoordinates: place.geometry })\n      }\n      render() {\n            return (\n                  <div>\n                        <div>\n                              <h3>Find jobs near by your location</h3>\n                              <Autocomplete onSelect={this.handleSelect} />\n                        </div>\n                        <div>\n                              <MapSearch\n                                    list={this.state.list}\n                                    search={this.state.searchCoordinates && this.state.searchCoordinates}\n\n                              />\n                        </div>\n\n                        <div>\n                              {this.state.list.map(({ _id, title, time, description, applicants, author }, i) => (\n                                    <div key={i} className=\"block\">\n                                          <NavLink to={`/announcements/${_id}`} >\n                                                <h3>{title}</h3>\n                                                <p>{description.substring(0, 100)}...</p>\n                                                <p>Time:<strong>{time}</strong></p>\n                                          </NavLink>\n                                          <div>\n                                                <ApplyJob id={_id} applicants={applicants} />\n\n                                                <FormMessage idAnnouncement={_id} idReceiver={author} title={title} />\n\n                                          </div>\n\n\n                                    </div>\n\n                              ))}\n                        </div>\n\n                  </div>\n            )\n      }\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\n\nclass Banner extends Component {\n      state = {\n            service: '',\n            option: '',\n            errors: {\n                  err_service: '',\n                  err_option: '',\n                  err_submit: ''\n            }\n      }\n      handleChange = (event) => {\n            const { name, value } = event.target\n            this.setState({ [name]: value })\n      }\n      checkValidation = () => {\n            let isValid = true;\n            let errors = {};\n            if (this.state.service === '') {\n                  errors.err_service = 'Please choose one option';\n                  isValid = false;\n            }\n            if (this.state.option === '') {\n                  errors.err_option = 'Please choose one option';\n                  isValid = false;\n            }\n            this.setState({ errors });\n            setTimeout(() => {\n                  this.setState({ errors: \"\" });\n            }, 3000);\n\n            return isValid;\n      }\n      handleSubmit = (event) => {\n            event.preventDefault();\n\n            if (this.checkValidation()) {\n\n                  if (this.state.option === \"announcements\") {\n                        this.props.history.push(`/announcements/${this.state.service}/s`)\n                  } else if (this.state.option === \"providers\") {\n                        this.props.history.push(`/providers/${this.state.service}/s`)\n                  }\n            } else {\n                  this.setState(prevState => ({\n                        errors: { ...prevState.errors, err_submit: \"Try again!\" }\n                  }));\n            }\n\n      }\n\n      render() {\n            return (\n                  <div>\n                        <div className=\"banner\">\n                              <h2>Find trusted caregivers for your every need</h2>\n\n                              <form onSubmit={this.handleSubmit}>\n                                    <div>\n                                          <h3 style={{ color: this.state.errors.err_service && \"red\" }}>To get started, choose an option</h3>\n                                          <label className='label' htmlFor=\"childCare\">Child care</label>\n                                          <input\n                                                id=\"childCare\"\n                                                type=\"radio\"\n                                                value=\"childCare\"\n                                                name=\"service\"\n                                                onChange={this.handleChange}\n\n                                          />\n\n                                          <label className='label' htmlFor=\"seniorCare\">Senior care</label>\n                                          <input\n                                                id=\"seniorCare\"\n                                                type=\"radio\"\n                                                value=\"seniorCare\"\n                                                name=\"service\"\n                                                onChange={this.handleChange}\n\n                                          />\n\n                                          <label className='label' htmlFor=\"petCare\">Pet care</label>\n                                          <input\n                                                id=\"petCare\"\n                                                type=\"radio\"\n                                                value=\"petCare\"\n                                                name=\"service\"\n                                                onChange={this.handleChange}\n\n                                          />\n                                          {this.state.errors.err_service && <p style={{ color: \"red\" }}>{this.state.errors.err_service}</p>}\n                                    </div>\n\n                                    <div>\n                                          <h3 style={{ color: this.state.errors.err_option && \"red\" }}>What would you like to do?</h3>\n\n                                          <label className='label' htmlFor=\"provider\">Find a caregiver</label>\n                                          <input\n                                                id=\"provider\"\n                                                type=\"radio\"\n                                                value=\"providers\"\n                                                name=\"option\"\n                                                onChange={this.handleChange}\n                                          />\n\n\n\n                                          <label className='label' htmlFor=\"announcement\">Find a job</label>\n                                          <input\n                                                id=\"announcement\"\n                                                type=\"radio\"\n                                                value=\"announcements\"\n                                                name=\"option\"\n                                                onChange={this.handleChange}\n                                          />\n                                          {this.state.errors.err_option && <p style={{ color: \"red\" }}>{this.state.errors.err_option}</p>}\n                                    </div>\n                                    <button>Search <i className=\"fas fa-search\"></i></button>\n                                    {this.state.errors.err_submit && <p style={{ color: \"red\" }}>{this.state.errors.err_submit}</p>}\n                              </form>\n\n                        </div>\n                  </div>\n            )\n      }\n}\nexport default withRouter(Banner)","import React from 'react'\nimport \"../../styles/Instructions.css\"\n\nfunction Instructions() {\n      \n      return (\n            <div className=\"home__instructions\">\n                  <div className=\"home__instructions-hire block\">\n                        <h2 className=\"home__instructions-title\">Hire care</h2>\n                        <div className=\"card\">\n                              <h3><i className=\"far fa-address-card\"></i> Get Started</h3>\n                              <p>Create your free profile. Post jobs for the help you want and start connecting today</p>\n                        </div>\n                        <div className=\"card\">\n                              <h3><i className=\"fas fa-search\"></i> Select Candidates</h3>\n                              <p>Find candidates with our search. Add favorites, send message or book an appointment </p>\n                        </div>\n                        <div className=\"card\">\n                              <h3><i className=\"fas fa-bullseye\"></i> Interview and Hire</h3>\n                              <p>Get background checks, discuss by message, conduct online interviews</p>\n                        </div>\n                  </div>\n\n                  <div className=\"home__instructions-find block\">\n                        <h2 className=\"home__instructions-title\">Find job</h2>\n                        <div className=\"card\">\n                              <h3><i className=\"far fa-address-card\"></i> Get Started</h3>\n                              <p>Create your free profile and post your profile</p>\n                        </div>\n                        <div className=\"card\">\n                              <h3><i className=\"fas fa-search\"></i> Select Jobs</h3>\n                              <p>Find jobs with our search. Send your application or send message</p>\n                        </div>\n                        <div className=\"card\">\n                              <h3><i className=\"fas fa-bullseye\"></i> Interview and Contract</h3>\n                              <p>Get more information through messages, conduct online interviews</p>\n                        </div>\n                  </div>\n            </div>\n      )\n}\n\nexport default Instructions;\n","import React from 'react'\nimport Rating from './Rate/Rating'\n\nfunction ReviewCard({ rate, name, review }) {\n      return (\n            <div className=\"review-card\">\n                  <div>\n                        <h3>{name}</h3>\n                        <Rating rate={rate} />\n                  </div>\n                  <p>{review}</p>\n            </div>\n      )\n}\n\nexport default ReviewCard\n","import React, { Component } from 'react'\nimport apiHandler from '../../api/apiHandler';\nimport ReviewCard from '../ReviewCard';\n\nexport default class WebReview extends Component {\n      state = {\n            list: []\n      }\n      componentDidMount() {\n            apiHandler.getWebReview()\n                  .then(data => { this.setState({ list: data }) })\n                  .catch(err => console.log(err))\n      }\n      render() {\n            return (\n                  <div>\n                        <div>\n                              {this.state.list.map((review, id) =>\n                                    <ReviewCard\n                                          key={id}\n                                          name={review.sender.firstName}\n                                          rate={review.rate}\n                                          review={review.review}\n                                    />\n                              )}\n                        </div>\n                  </div>\n            )\n      }\n}\n\n\n","import React, { Component } from 'react'\nimport Banner from '../components/Home/Banner'\nimport Instructions from '../components/Home/Instructions'\nimport WebReview from '../components/Home/WebReview'\n\n\n\nexport default class Home extends Component {\n      state = {\n\n      }\n\n      handleServices = (name, value) => {\n            console.log(name, value)\n      }\n      render() {\n            return (\n                  <div>\n                        <Banner />\n                        <Instructions />\n                        <WebReview />\n                        \n                  </div>\n            )\n      }\n}\n","import React, { Component } from 'react'\nimport apiHandler from '../../api/apiHandler';\nimport UserContext from '../Auth/UserContext';\nimport \"../../styles/FormSignup.css\"\nimport { Redirect } from 'react-router-dom';\n\nexport default class FormLogin extends Component {\n      static contextType = UserContext;\n\n      state = {\n            password: 'Tran123',\n            email: 'tran@gmail.com',\n            errors: {\n                  err_password: '',\n                  err_email: '',\n                  err_submit: ''\n            },\n      }\n\n      handleChange = (event) => {\n            const { value, name } = event.target;\n            this.setState({ [name]: value });\n      }\n\n      checkValidation = () => {\n            const { email, password } = this.state;\n            let isValid = true;\n            let errors = {};\n\n            if (!email) {\n                  errors.err_email = 'This field is required';\n                  isValid = false;\n            }\n            if (!password) {\n                  errors.err_password = 'This field is required';\n            }\n            this.setState({ errors });\n\n            setTimeout(() => {\n                  this.setState({ errors: \"\" });\n            }, 3000);\n            return isValid;\n\n      }\n\n      handleSubmit = (event) => {\n            event.preventDefault();\n\n            if (this.checkValidation()) {\n                  const { errors, ...data } = this.state;\n                  apiHandler.login(data)\n                        .then(data => {\n                              this.context.setUser(data);\n                        })\n                        .catch(err => {\n                              this.setState(prevState => ({\n                                    errors: { ...prevState.errors, err_submit: err.message }\n                              }))\n                        })\n            }\n\n      }\n      render() {\n            if (this.context.isLoggedIn) return <Redirect to=\"/\" />;\n            // console.log(this.context.isLoading)\n            const { email, password, errors } = this.state;\n            const { err_email, err_password, err_submit } = errors;\n\n            return (\n                  <section>\n                        <header>\n                              <h1>Login</h1>\n                        </header>\n\n                        <form onSubmit={this.handleSubmit}>\n                              <div className=\"form-group\">\n                                    <label className='label' htmlFor=\"email\">Email</label>\n                                    <input\n                                          className={err_email ? \"input failure\" : 'input success'}\n                                          id=\"email\"\n                                          type=\"text\"\n                                          name=\"email\"\n                                          value={email}\n                                          onChange={this.handleChange}\n                                    />\n                                    {err_email && <p className=\"failure\">{err_email}</p>}\n                              </div>\n\n                              <div className=\"form-group\">\n                                    <label className='label' htmlFor=\"password\">Password</label>\n                                    <input\n                                          className={err_password ? \"input failure\" : 'input success'}\n                                          id=\"password\"\n                                          type=\"password\"\n                                          name=\"password\"\n                                          value={password}\n                                          onChange={this.handleChange}\n                                    />\n                                    {err_password && <p className=\"failure\">{err_password}</p>}\n                              </div>\n\n                              <button className=\"btn-submit\">Sign in</button>\n                              {err_submit && <p className=\"failure\">{err_submit}</p>}\n                        </form>\n                  </section>\n            )\n      }\n}\n","import React, { Component } from 'react'\nimport FormLogin from '../components/FormsAuth/FormLogin'\n\nexport default class Login extends Component {\n      render() {\n            return (\n                  <div>\n                        <FormLogin />\n                  </div>\n            )\n      }\n}\n","import React, { Component } from 'react'\nimport apiHandler from '../api/apiHandler';\nimport UserContext from '../components/Auth/UserContext'\n\nexport default class Messages extends Component {\n      static contextType = UserContext;\n      state = {\n            list: null,\n            error: '',\n            message: ''\n\n      }\n      componentDidMount() {\n            apiHandler.getThread(this.props.match.params.idMessage)\n                  .then(data => {\n                        console.log(data)\n                        this.setState({ list: data })\n                  })\n                  .catch(error => this.setState({ error: error }))\n\n      }\n      onChange = (event) => {\n            this.setState({ message: event.target.value });\n      }\n      onSubmit = (event) => {\n            event.preventDefault();\n            if (this.state.message === \"\") {\n                  return this.setState({ error: \"Please write something.....\" });\n            }\n            console.log(this.state.message)\n            apiHandler\n                  .addNewMessage(this.props.match.params.idMessage, {message:this.state.message, author: this.context.user._id})\n                  .then(response => {\n                        this.setState({list:response})\n                  })\n                  .catch(err => this.setState({error: err.message}))\n\n      }\n      render() {\n            if (!this.state.list) return <div>....Loading</div>\n\n            const { sender, receiver, announcement, messagesBox } = this.state.list;\n            console.log(messagesBox)\n            return (\n                  <div>\n                        {announcement && <h3>Announcement: <strong>{announcement.title}</strong></h3>}\n\n                        <div>\n                              <h3>Chat thread between {sender._id === this.context.user._id\n                                    ? <span>{receiver.firstName}</span>\n                                    : <span>{sender.firstName}</span>} and you</h3>\n                        </div>\n\n                        <div>\n\n                              {\n                                    messagesBox.map(({ author, message }, id) => (\n                                          author === this.context.user._id\n                                                ? <div key={id} className=\"right\">\n                                                      <img\n                                                            src={this.context.user.image}\n                                                            alt={this.context.user.firstName} />\n                                                      <p>{message}</p>\n                                                </div>\n                                                : <div key={id} className=\"left\">\n                                                      <img\n                                                            src={author === sender._id ? sender.image : receiver.image}\n                                                            alt={author === sender._id ? sender.firstName : receiver.firstName} />\n                                                      <p>{message}</p>\n                                                </div>\n                                    ))\n                              }\n                        </div>\n                        <div>\n                              <form onSubmit={this.onSubmit}>\n                                    <input\n                                          onChange={this.onChange}\n                                          value={this.state.message}\n                                          name=\"message\"\n                                    />\n                                    <button>Send</button>\n                              </form>\n                              {this.state.error && <p>{this.state.error}</p>}\n                        </div>\n\n                  </div>\n\n            )\n      }\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport apiHandler from '../api/apiHandler';\nimport ApplyJob from '../components/ApplyJob';\nimport MapSearch from '../components/Map/MapSearch';\nimport FormMessage from '../components/Message/FormMessage';\nimport OtherServices from '../components/Profile/components/OtherServices';\nimport Services from '../components/Profile/components/Services';\n\nclass OneAnnounce extends Component {\n      state = {\n            announcement: null,\n      }\n\n      componentDidMount() {\n            console.log(this.props.match.params.idAnnouncement)\n            apiHandler.getOneAnnouncement(this.props.match.params.idAnnouncement)\n                  .then(data => this.setState({ announcement: data }))\n                  .catch(err => console.log(err))\n\n      }\n\n      render() {\n\n            if (this.state.announcement) {\n                  const { _id, author, service, additionalServices, title, description, location, applicants } = this.state.announcement;\n                  const { firstName, lastName, image } = author;\n                  console.log(\"check\", location)\n                  return (\n                        <div>\n                              <div className=\"block\">\n                                    <div style={{ display: 'flex' }}>\n                                          <img src={image} alt={firstName} />\n                                          <p>Hello, my name is {lastName} {firstName}</p>\n                                    </div>\n\n\n                              </div>\n                              <div className=\"block\">\n                                    <p><em>Title</em> <strong>{title}</strong></p>\n                                    <p><em>Description: </em>{description}</p>\n                              </div>\n\n                              <div className=\"block\">\n                                    <h2>Requires</h2>\n                                    <Services\n                                          defaultValue={service}\n                                          editable=\"false\"\n                                    />\n                                    <OtherServices defaultValue={additionalServices} editable=\"false\" />\n                              </div>\n\n                              <div className=\"block\">\n                                    <MapSearch user={location} />\n                              </div>\n                              <br></br>\n                              <br></br>\n                              <div className=\"block\">\n                                   \n                                    <FormMessage idAnnouncement={_id} idReceiver={author._id} title={title} />\n                                    <ApplyJob id={_id} applicants={applicants} />\n                              </div>\n                        </div>\n\n\n                  )\n            } else {\n                  return (\n                        <div>Loading...</div>\n                  )\n\n            }\n\n      }\n}\n\nexport default withRouter(OneAnnounce)","import React, { Component, Fragment } from 'react'\nimport apiHandler from '../api/apiHandler';\nimport UserContext from './Auth/UserContext';\n\nexport default class ButtonAddFavoriteList extends Component {\n      static contextType = UserContext;\n      state = {\n            isFavorite: false,\n            message: ''\n      }\n      componentDidMount() {\n            if (this.isFavorited()) {\n                  this.setState({ isFavorite: true })\n            }\n      }\n      addToFavorite = () => {\n            this.setState({ isFavorite: !this.state.isFavorite });\n            const idProvider = this.props.idProvider;\n            if (!this.isFavorited()) {\n                  apiHandler\n                        .addToFavoriteList(idProvider)\n                        .then(response => {\n                              if (response.message === \"Of course you are in your favorite list!\") {\n                                    this.setState({ message: \"It's you!\" })\n                                    setTimeout(() => {\n                                          this.setState({ message: \"\" })\n                                    }, 5000);\n                              } else {\n                                    this.context.setUser(response)\n                              }\n\n                        })\n                        .catch(err => {\n                              console.log(err.message)\n                              this.setState({ isFavorite: false })\n                        })\n            } else {\n                  apiHandler.takeOffFavoriteList(idProvider)\n                        .then(response => {\n                              console.log(response)\n                              this.context.setUser(response)\n                        })\n                        .catch(err => { console.log(err.message) })\n            }\n      }\n\n\n      isFavorited = () => {\n            return this.context.user?.favoriteProviders.includes(this.props.idProvider)\n      }\n\n\n      render() {\n\n            return (\n                  <Fragment key={this.props.isAdded}>\n                        <button onClick={this.addToFavorite}>\n                              {this.isFavorited() ?\n                                    <i className=\"fas fa-heart\" style={{ color: \"red\" }} />\n                                    : <i className=\"far fa-heart solid\" />}\n                        </button>\n                        {this.state.message && <p>{this.state.message}</p>}\n                  </Fragment>\n            )\n      }\n}\n","import React, { Component, Fragment } from 'react'\nimport apiHandler from '../api/apiHandler';\nimport UserContext from './Auth/UserContext';\n\nexport default class ButtonBookingRequest extends Component {\n      static contextType = UserContext;\n      state = {\n            bookingList: [],\n            message: ''\n      }\n      componentDidMount() {\n            this.setState({ bookingList: this.props.bookingList })\n      }\n      booking = () => {\n\n            // const idProvider = this.props.match.params.idProvider;\n            const idProvider = this.props.idProvider;\n\n            if (!this.bookedProvider()) {\n                  apiHandler\n                        .sendBookingRequest(idProvider)\n                        .then(response => {\n                              if (response.message === \"It seems you do not need a care provider!\") {\n                                    this.setState({ message: \"It's you!\" })\n                                    setTimeout(() => {\n                                          this.setState({ message: \"\" })\n                                    }, 5000);\n                              } else {\n                                    this.setState({ bookingList: response.bookingList })\n                              }\n                        })\n                        .catch(err => {\n                              console.log(err.message)\n                              this.setState({ booking: false })\n                        })\n            } else {\n                  apiHandler.cancelBookingRequest(idProvider)\n                        .then(response => this.setState({ bookingList: response.bookingList }))\n                        .catch(err => { console.log(err.message) })\n            }\n\n      }\n      bookedProvider = () => {\n            return this.state.bookingList.includes(this.context.user?._id)\n      }\n      render() {\n            return (\n                  <Fragment>\n                        <button\n                              onClick={this.booking}\n                              style={{ color: this.bookedProvider() && \"green\" }}\n                        >\n                              {this.bookedProvider() ? \"Booked\" : \"Booking request\"}\n                        </button>\n                        {this.state.message && <p>{this.state.message}</p>}\n                  </Fragment>\n\n            )\n      }\n}\n\n","import React, { Component } from 'react'\nimport ReviewCard from './ReviewCard';\nimport \"../styles/Carousel.css\"\n\nexport default class Carousel extends Component {\n      state = {\n            activeIndex: 0\n      }\n\n      goToSlide = (index) => {\n            this.setState({ activeIndex: index });\n      }\n  \n      goToPrevSlide = (e) => {\n            e.preventDefault();\n\n            let index = this.state.activeIndex;\n            let slidesLength = this.props.reviews.length;\n\n            if (index < 1) {\n                  index = slidesLength;\n            }\n            --index;\n\n            this.setState({\n                  activeIndex: index\n            });\n      }\n\n      goToNextSlide = (e) => {\n            e.preventDefault();\n\n            let index = this.state.activeIndex;\n            let slidesLength = this.props.reviews.length - 1;\n\n            if (index === slidesLength) {\n                  index = -1;\n            }\n            ++index;\n\n            this.setState({ activeIndex: index });\n      }\n      \n\n      render() {\n            return (\n                  <div className=\"carousel\">\n                        <button\n                              \n                              className=\"carousel__arrow carousel__arrow--left\"\n                              onClick={e => this.goToPrevSlide(e)}\n                        >\n                              <i className=\"fas fa-angle-left\"></i>\n                        </button>\n\n                        <ul className=\"carousel__slides\">\n                              {this.props.reviews.map((review, index) =>\n                                    <li\n                                          className={\n                                                index === this.state.activeIndex\n                                                      ? \"carousel__slide carousel__slide--active\"\n                                                      : \"carousel__slide\"\n                                          }\n                                          key={index}\n                                    >\n\n                                          <ReviewCard\n                                                className=\"carousel-slide__content\"\n                                                key={index}\n                                                review={review.review}\n                                                name={review.sender.firstName}\n                                                rate={review.rate}\n                                          />\n\n                                    </li>\n                              )}\n                        </ul>\n\n                        <button\n                              className=\"carousel__arrow carousel__arrow--right\"\n                              onClick={e => this.goToNextSlide(e)}\n                        >\n                              <i className=\"fas fa-angle-right\"></i>\n                        </button>\n\n                        <ul className=\"carousel__indicators\">\n                              {this.props.reviews.map((slide, index) =>\n                                    <li key={index}>\n                                          <button\n                                                className={\n                                                      index === this.state.activeIndex\n                                                            ? \"carousel__indicator carousel__indicator--active\"\n                                                            : \"carousel__indicator\"\n                                                }\n                                                onClick={e => this.goToSlide(index)}\n                                          />\n                                    </li>\n                              )}\n                        </ul>\n                  </div>\n\n\n            )\n      }\n}\n","export function getAge(date) {\n  const today = new Date();\n  if (date) {\n    const birthday = new Date(date)\n    const diff = today - birthday;//millisecond\n    const currentAge = Math.floor(diff / (1000 * 60 * 60 * 24 * 365.25))\n    return currentAge;\n  } else { return \"\" }\n\n};\n\nexport function buildFormData(formData, data, parentKey) {\n  if (\n    data &&\n    typeof data === \"object\" &&\n    !(data instanceof Date) &&\n    !(data instanceof File)\n  ) {\n    Object.keys(data).forEach((key) => {\n      buildFormData(\n        formData,\n        data[key],\n        parentKey ? `${parentKey}[${key}]` : key\n      );\n    });\n  } else {\n    const value = data == null ? \"\" : data;\n    formData.append(parentKey, value);\n  }\n}\n\n\nexport function averageRates(reviews) {\n  let i = 0;\n  let sum = 0;\n  if (reviews) {\n    reviews.forEach(review => {\n      if (review.rate) { sum += review.rate; i++ }\n    })\n    return Math.floor(sum/i)\n  }\n}","import React, { Component } from 'react'\nimport { NavLink, withRouter } from 'react-router-dom';\nimport apiHandler from '../api/apiHandler';\nimport UserContext from '../components/Auth/UserContext';\nimport ButtonAddFavoriteList from '../components/ButtonAddFavoriteList';\nimport ButtonBookingRequest from '../components/ButtonBookingRequest';\nimport Carousel from '../components/Carousel';\nimport MapSearch from '../components/Map/MapSearch';\nimport FormMessage from '../components/Message/FormMessage';\nimport OtherServices from '../components/Profile/components/OtherServices';\nimport Services from '../components/Profile/components/Services';\nimport { getAge } from '../utils';\n\n\nclass OneProvider extends Component {\n      static contextType = UserContext;\n      state = {\n\n            provider: null,\n            seeMore: false\n      }\n      getData = (limit) => {\n            apiHandler\n                  .getOneProvider(this.props.match.params.idProvider, limit)\n                  .then(data => {\n                        console.log(\"fetch data\", data)\n                        this.setState({ provider: data[0] })\n                  })\n                  .catch(err => console.log(err.message))\n      }\n      componentDidMount() {\n            this.getData(4);\n      }\n\n      handleBack = () => {\n            this.props.history.goBack();\n      }\n\n      seeMore = () => {\n            this.getData(100);\n            this.setState({ seeMore: true })\n      }\n\n      render() {\n            const { provider, seeMore } = this.state;\n            if (provider) {\n                  const { _id, firstName, lastName, description, image, service, additionalServices, experiences, availability, reviews, location, bookingList } = provider;\n                  console.log(\"reviews\", bookingList, _id)\n                  let age = '';\n                  if (provider.birthday) {\n                        age = getAge(provider.birthday)\n                  }\n                  //if this provider is in the current user's favorite list \n                  let isInFavList = false;\n\n                  if (this.context.user) {\n                        if (this.context.user.favoriteProviders.includes(this.props.match.params.idProvider)) {\n                              isInFavList = true;\n                        }\n                  }\n\n                  return (\n                        <div>\n                              <div>\n                                    <button onClick={this.handleBack}><p><i className=\"fas fa-arrow-circle-left\" /></p> Back</button>\n                                    <NavLink to={{\n                                          pathname: `/provider/${this.props.match.params.idProvider}/review`,\n                                          state: { name: provider.firstName }\n                                    }}\n                                    >Add Review</NavLink>\n\n\n                                    <ButtonAddFavoriteList\n                                          idProvider={this.props.match.params.idProvider}\n                                          isAdded={isInFavList}\n                                    />\n                              </div>\n\n                              <div>\n                                    <div className=\"block\">\n                                          <img src={image} alt={this.firstName} />\n                                          <p>{firstName} <strong>{lastName}</strong></p>\n                                          {age && <p>{age} years old</p>}\n                                    </div>\n\n                                    <div className=\"block\">\n                                          <h2>Hello, I am {firstName}</h2>\n                                          <p>{description}</p>\n                                    </div>\n\n                                    <div className=\"block\">\n                                          <h2>Service offer:</h2>\n                                          <Services defaultValue={service} editable=\"false\" />\n                                          <h2>I'm comfortable with:</h2>\n                                          <OtherServices defaultValue={additionalServices} editable=\"false\" />\n                                    </div>\n\n                                    <div className=\"block\">\n                                          <h2>Skills and Experiences</h2>\n                                          <p>{experiences}</p>\n                                    </div>\n\n                                    <div className=\"block\">\n                                          <h2>Availability</h2>\n                                          <p>{availability}</p>\n                                    </div>\n\n                                    <div className=\"block\">\n                                          <h2>Reviews</h2>\n                                          {(!seeMore && reviews.length !== 0) && <button onClick={this.seeMore}>more reviews</button>}\n                                          {reviews.length !== 0 ? <Carousel reviews={reviews} /> : <p>0 reviews</p>}\n\n                                    </div>\n\n                                    {location.coordinates.length !== 0 && <div className=\"block\">\n                                          <h2>Location</h2>\n\n                                          <MapSearch user={location} />\n                                    </div>}\n                              </div>\n                              <br></br>\n                              <br></br>\n                              <br></br>\n                              <div className=\"block\">\n\n                                    <FormMessage idReceiver={_id} />\n                                    <ButtonBookingRequest bookingList={bookingList} idProvider={this.props.match.params.idProvider} />\n                              </div>\n\n\n                        </div>\n                  )\n            } else {\n                  return ''\n            }\n      }\n\n}\n\nexport default withRouter(OneProvider);","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport apiHandler from '../../api/apiHandler'\n\nexport default class AnnouncementList extends Component {\n\n      state = {\n            list: []\n      }\n      getData = () => {\n            apiHandler\n                  .getAnnouncementsByAuthor(this.props.idUser)\n                  .then(data => {\n                        this.setState({ list: data })\n                  })\n                  .catch(err => console.log(err))\n      }\n      componentDidMount() {\n            this.getData();\n      }\n      handleDelete = (id) => {\n            apiHandler.deleteOneAnnouncement(id)\n                  .then(response => this.getData())\n                  .catch(err => console.log(err))\n      }\n      render() {\n            \n            return (\n                  <table style={{ backgroundColor: \"pink\" }}>\n                        <thead>\n                              <tr>\n                                    <th>Date</th>\n                                    <th>Title</th>\n                                    <th>Applicants</th>\n                                    <th>Edit</th>\n                                    <th>Delete</th>\n                              </tr>\n\n                        </thead>\n\n                        <tbody>\n                              {this.state.list.map((ann, id) => {\n                                    return (\n                                          <tr key={id}>\n                                                <td>{ann.createdAt.toString().substr(0, 10)}</td>\n                                                <td>{ann.title}</td>\n                                                <td>\n                                                      <ul>\n                                                            {ann.applicants.map(((applicant, idApp) => {\n                                                                  return (\n                                                                        <li key={idApp}><NavLink to={`/provider/${applicant._id}`}>{applicant.lastName}</NavLink></li>\n                                                                  )\n                                                            }))\n                                                            }\n                                                      </ul>\n                                                </td>\n                                                <td><NavLink to={`/announcements/edit/${ann._id}`}><i className=\"fas fa-edit\"></i></NavLink></td>\n                                                <td><button onClick={e => this.handleDelete(ann._id)}><i className=\"fas fa-trash-alt\"></i></button></td>\n                                          </tr>\n                                    )\n                              }\n                              )}\n                              {this.state.list.length === 0 && <tr key={0}><th colSpan=\"5\">Empty list</th></tr>}\n\n                        </tbody>\n                  </table>\n            )\n      }\n}\n","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport apiHandler from '../../../api/apiHandler'\nimport FormMessage from '../../Message/FormMessage'\n\nexport default class FavoriteOrBookingList extends Component {\n      state = {\n            list: [],\n            isFavList: false,\n\n      }\n      componentDidMount() {\n\n            this.setState({\n                  list: this.props.list,\n                  isFavList: this.props.isFavList,\n            })\n      }\n\n      handleDelete = (idUser) => {\n\n            if (this.state.isFavList === \"true\") {\n                  apiHandler\n                        .takeOffFavoriteList(idUser)\n                        .then(response => {\n                              this.setState({ list: this.state.list.filter(e => e._id !== idUser) })\n\n                        })\n                        .catch(err => { console.log(err.message) })\n            }\n            if (this.state.isFavList === \"false\") {\n\n                  apiHandler\n                        .deleteBookingByCurrentUser(idUser)\n                        .then(response => {\n                              this.setState({ list: this.state.list.filter(e => e._id !== idUser) })\n                        })\n                        .catch(err => { console.log(err.message) })\n            }\n\n      }\n      render() {\n            // console.log(\"fav\", this.state.isFavList === \"true\", \"list\", this.state.list)\n            return (\n                  <table style={{ backgroundColor: \"pink\" }}>\n                        <thead>\n                              <tr>\n                                    <th>Image</th>\n                                    <th>Name</th>\n                                    <th>Delete</th>\n                                    <th>Contact</th>\n                              </tr>\n                        </thead>\n\n                        <tbody>\n                              {this.state.list.map((provider, i) => (\n                                    <tr key={i}>\n                                          <td>\n                                                {this.state.isFavList === \"true\" ?\n                                                      <NavLink to={`/provider/${provider._id}`}>\n                                                            <img src={provider.image} alt={provider.firstName} />\n                                                      </NavLink>\n                                                      : <img src={provider.image} alt={provider.firstName} />\n                                                }\n\n                                          </td>\n                                          <td>\n                                                {this.state.isFavList === \"true\" ?\n                                                      <NavLink to={`/provider/${provider._id}`}>\n                                                            {provider.firstName} {provider.lastName}\n                                                      </NavLink>\n                                                      : <p> {provider.firstName} {provider.lastName}</p>\n                                                }\n\n\n                                          </td>\n\n\n                                          <td><button onClick={e => this.handleDelete(provider._id)}><i className=\"fas fa-trash-alt\"></i></button></td>\n                                          <td>Message <i className=\"fas fa-envelope\"></i></td>\n                                          <td> <FormMessage idReceiver={provider._id} /></td>\n                                    </tr>\n\n\n                              ))}\n\n\n\n                        </tbody>\n                  </table >\n\n            )\n      }\n}\n","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom';\nimport apiHandler from '../../api/apiHandler'\nimport UserContext from '../Auth/UserContext'\n\nexport default class MessageTable extends Component {\n      static contextType = UserContext;\n      state = {\n            list: [],\n            inSentBox: false,\n            error: '',\n\n\n      }\n      componentDidMount() {\n            this.setState({ inSentBox: false })\n            apiHandler.getMessages(this.context.user._id, \"received\")\n                  .then(list => this.setState({ list: list }))\n                  .catch(err => this.setState({ error: err.message }))\n      }\n      GotoReceivedBox = () => {\n            this.setState({ inSentBox: false })\n            console.log(\"here received box\")\n            apiHandler.getMessages(this.context.user._id, \"received\")\n                  .then(list => this.setState({ list: list }))\n                  .catch(err => this.setState({ error: err.message }))\n      }\n      GoToSentBox = () => {\n            this.setState({ inSentBox: true })\n            apiHandler.getMessages(this.context.user._id, \"sent\")\n                  .then(list => this.setState({ list: list }))\n                  .catch(err => this.setState({ error: err.message }))\n      }\n      render() {\n            const { error, list, inSentBox } = this.state;\n            console.log(list)\n            return (\n                  <div>\n                        <div>\n                              <button onClick={this.GotoReceivedBox}>Received</button>\n                              <button onClick={this.GoToSentBox}>Sent</button>\n                        </div>\n                        {error && <p>error</p>}\n                        <div>\n                              <table>\n                                    <thead>\n                                          <tr>\n                                                <th>From: {!inSentBox ? \"other\" : \"you\"} </th>\n                                                <th>To : {!inSentBox ? \"you\" : \"other\"}</th>\n                                                <th>Title</th>\n                                                <th>Chat thread</th>\n                                          </tr>\n                                    </thead>\n\n                                    <tbody>\n                                          {list.map(({ sender, receiver, _id, announcement }, id) => (\n                                                <tr key={id}>\n                                                      <td>From:{!inSentBox ? <p>{sender.lastName} {sender.firstName}</p> : \"you\"} </td>\n                                                      <td>TO: {!inSentBox ? \"you\" : <p>{receiver.lastName} {receiver.firstName}</p>}</td>\n                                                      <td>\n                                                            <NavLink to={`/message/${_id}`}>\n                                                                  {announcement ? <p>{announcement.title.substring(0, 50)}</p> : \"request\"}\n                                                            </NavLink>\n\n                                                      </td>\n                                                      <td>\n                                                            <NavLink to={`/message/${_id}`}>\n                                                                  <i className=\"fas fa-comments\"></i>\n                                                            </NavLink>\n\n                                                      </td>\n                                                </tr>\n                                          ))}\n\n                                          {list.length === 0 && <tr>\n                                                <td colSpan=\"4\"> No Message</td>\n                                          </tr>}\n                                    </tbody>\n                              </table>\n                        </div>\n\n                  </div>\n            )\n      }\n}\n","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { getAge } from '../../utils';\nimport UserContext from '../Auth/UserContext'\nimport AnnouncementList from '../Announcement/AnnouncementList';\nimport FavoriteOrBookingList from './components/FavoriteOrBookingList';\nimport apiHandler from '../../api/apiHandler';\nimport AddReview from '../../pages/AddReview';\nimport MessageTable from '../Message/MessageTable';\n\n\n\nexport default class Dashboard extends Component {\n      static contextType = UserContext;\n\n      state = {\n            user: null\n      }\n      componentDidMount() {\n            apiHandler\n                  .getProfile()\n                  .then(data => {\n                        this.context.setUser(data);\n                        this.setState({ user: data })\n                  })\n                  .catch(error => {\n                        console.log(error)\n                        this.context.isLoading = false;\n                  })\n      }\n\n      render() {\n            console.log(\"user\", this.state.user)\n            if (this.state.user) {\n                  const { image, firstName, lastName, birthday, formattedAddress, _id, favoriteProviders, bookingList } = this.state.user\n                  const age = getAge(birthday)\n\n                  // console.log(\"list\",bookingList)\n                  return (\n                        <div className=\"dashboard__container\">\n                              <h1>Dashboard</h1>\n                              <div>\n                                    <div className=\"dashboard__information\">\n                                          <img src={image} className=\"image\" alt=\"profile\"/>\n                                          <p><em>Name : </em>{firstName} <strong>{lastName}</strong></p>\n                                          <p><em>Age: </em>{age}</p>\n                                          <p><em>Address : </em>{formattedAddress}</p>\n                                    </div>\n                                    <br></br>\n                                    <br></br>\n                                    <div style={{ display: 'flex', flexDirection: \"column\" }}>\n                                          <h1>DO you want to find a care provider?</h1>\n                                          <div className=\"block\">\n                                                <h2>Announcement list</h2>\n                                                <NavLink to=\"/announcements/new\">Add new</NavLink>\n                                                <AnnouncementList idUser={_id} />\n                                          </div>\n\n                                          <div className=\"block\">\n                                                <h2>List of favorite providers</h2>\n                                                <FavoriteOrBookingList list={favoriteProviders} isFavList=\"true\" />\n                                          </div>\n\n                                          <br></br>\n                                          <h1>Do you want to find a job?</h1>\n                                          <div className=\"block\">\n                                                <h2>You received booking requests</h2>\n                                                <FavoriteOrBookingList list={bookingList} isFavList=\"false\" />\n                                          </div>\n\n                                          <br></br>\n                                          <h1>Review for our website</h1>\n                                          <div className=\"block\">\n                                              <AddReview />\n                                          </div>\n\n                                          <br></br>\n                                          <h1>Message</h1>\n                                          <div className=\"block\">\n                                              <MessageTable />\n                                          </div>\n\n\n                                    </div>\n                              </div>\n\n                        </div>\n                  )\n            } else {\n                  return <div>Loading ...</div>\n            }\n\n\n      }\n}\n","import React from \"react\";\n\n\nconst UploadWidget = React.forwardRef((props, ref) => {\n\n\n      const handleFileSelect = (event) => {\n            //    create a \"fake URL\" \n            const file = event.target.files[0];\n            const tempURL = URL.createObjectURL(file);\n            props.onFileSelect && props.onFileSelect(tempURL);\n      };\n\n      return (\n            <React.Fragment>\n                  <label className=\"UploadWidget label\" htmlFor={props.name}>\n                        {props.children}\n                  </label>\n                  <input\n                        onChange={handleFileSelect}\n                        ref={ref}\n                        className=\"UploadWidget input\"\n                        id={props.name}\n                        name={props.name}\n                        type=\"file\"\n                  />\n            </React.Fragment>\n      );\n});\n\nexport default UploadWidget;","import React, { Component, Fragment } from 'react'\n\nexport default class BirthdayFields extends Component {\n      state = {\n            day: '',\n            month: '',\n            year: '',\n      }\n      handleChange = (event) => {\n            const { name, value } = event.target;\n            this.setState({ [name]: value });\n            this.props.handleBirthday({ ...this.state, [name]: value })\n      }\n\n      componentDidMount() {\n            if (this.props.birthdayValue) {\n                  const date = this.props.birthdayValue.split(\"-\");\n                  this.setState({\n                        day: date[2],\n                        month: date[1],\n                        year: date[0]\n                  }\n                  )\n            }\n      }\n      render() {\n\n            return (\n                  <Fragment>\n\n                        <input\n                              id=\"year\"\n                              type=\"text\"\n                              name=\"year\"\n                              placeholder=\"yyyy\"\n                              value={this.state.year}\n                              onChange={this.handleChange}\n                              required\n                        />\n                        <input\n                              id=\"month\"\n                              type=\"text\"\n                              name=\"month\"\n                              placeholder=\"mm\"\n                              value={this.state.month}\n                              onChange={this.handleChange}\n                              required\n                        />\n                        <input\n                              id=\"day\"\n                              type=\"text\"\n                              name=\"day\"\n                              placeholder=\"dd\"\n                              value={this.state.day}\n                              onChange={this.handleChange}\n                              required\n                        />\n                  </Fragment>\n            )\n      }\n}\n","import React, { Component, Fragment } from 'react'\n\nexport default class VisibilityField extends Component {\n      state = {\n            isProvider: \"\",\n      }\n      handleChange = (event) => {\n           const {name, value} = event.target;\n           console.log({name},{value})\n           if(value === \"public\"){\n                 console.log(\"vo day\")\n            this.setState({ isProvider: true });\n            this.props.handleVisibility(true);\n           }else{\n            this.setState({ isProvider: false });\n            this.props.handleVisibility(false);\n           }\n          \n      }\n      componentDidMount() {\n            this.setState({ isProvider: this.props.defaultValue })\n      }\n      render() {\n            \"test\"\n            return (\n                  <Fragment>\n                        <label htmlFor=\"public\">Everyone</label>\n                        <input\n                              type=\"radio\"\n                              id=\"public\"\n                              name=\"isProvider\"\n                              value=\"public\"\n                              onChange={this.handleChange}\n                              checked={this.state.isProvider}\n                        />\n\n\n                        <label htmlFor=\"private\">Private</label>\n                        <input\n                              type=\"radio\"\n                              id=\"private\"\n                              value=\"private\"\n                              name=\"isProvider\"\n                              onChange={this.handleChange}\n                              checked={!this.state.isProvider}\n                        />\n\n                  </Fragment>\n            )\n      }\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom';\nimport apiHandler from '../../api/apiHandler';\nimport { buildFormData } from '../../utils';\nimport UserContext from '../Auth/UserContext'\nimport AutoComplete from '../Map/AutoComplete';\nimport PopUp from '../PopUp';\nimport UploadWidget from '../UploadWidget';\nimport BirthdayFields from './components/BirthdayFields';\nimport OtherServices from './components/OtherServices';\nimport Services from './components/Services';\nimport VisibilityField from './components/VisibilityField';\n\n\nclass EditProfile extends Component {\n      static contextType = UserContext;\n\n      state = {\n            user: null,\n            image: '',\n            errors: {\n                  err_submit: '',\n                  err_birthday: '',\n                  err_lastName: '',\n                  err_firstName: '',\n                  err_password: '',\n                  err_email: ''\n            },\n            showPopUP: false,\n      }\n\n      imageRef = React.createRef();\n\n      componentDidMount() {\n            this.setState({\n                  user: this.context.user\n            });\n      }\n\n      handleChange = (event) => {\n            const value = event.target.type === \"file\" ? event.target.files[0] : event.target.value;\n            const name = event.target.name;\n            this.setState({ user: { ...this.state.user, [name]: value } })\n      }\n\n      handleFileSelect = (tempUrl) => {\n            this.setState({ image: tempUrl })\n      }\n      handleBirthday = (value) => {\n            const birthday = `${value.year}-${value.month}-${value.day}`;\n            this.setState({ user: { ...this.state.user, birthday } })\n      }\n      handlePlace = (place) => {\n            const location = place.geometry;\n            const formattedAddress = place.place_name;\n            this.setState({ user: { ...this.state.user, location, formattedAddress } })\n      }\n      handleVisibility = (value) => {\n            console.log(value)\n            this.setState({ user: { ...this.state.user, isProvider: value } })\n      }\n      handleServices = (name, checked) => {\n            console.log(name, checked)\n            this.setState({ user: { ...this.state.user, service: { ...this.state.user.service, [name]: checked } } })\n      }\n      handleAdditionalServices = (name, checked) => {\n            console.log(name, checked)\n            this.setState({ user: { ...this.state.user, additionalServices: { ...this.state.user.additionalServices, [name]: checked } } })\n      }\n\n      checkValidation = () => {\n            const { lastName, firstName, email, password, birthday } = this.state.user;\n            let errors = {};\n            let isValid = true;\n\n            //check name\n            if (!firstName) {\n                  isValid = false;\n                  errors.err_firstName = 'Please enter your first name';\n            }\n\n            if (!lastName) {\n                  isValid = false;\n                  errors.err_lastName = 'Please enter your last name';\n            }\n\n            //check email\n            if (!email) {\n                  errors.err_email = 'Please enter your email correctly';\n                  isValid = false;\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n                  errors.err_email = 'Email address is invalid';\n                  isValid = false;\n            }\n\n            //check password\n            if (password !== undefined) {\n                  if (password.length < 6) {\n                        isValid = false;\n                        errors.err_password = \"Enter a password, minimum of 6 characters, 1 uppercase, 1 lowercase and 1 number digit\";\n                  }\n            }\n\n\n            //check birthday\n            const isValidBirthday = new Date(birthday);\n\n            const currentDate = new Date();\n            if (isValidBirthday === \"Invalid Date\") {\n                  errors.err_birthday = 'Please enter the correct format of your date of birth';\n                  isValid = false;\n            }\n            if ((currentDate - isValidBirthday) < 0) {\n                  errors.err_birthday = 'Check your birth year';\n                  isValid = false;\n            }\n\n            this.setState({ errors });\n\n            setTimeout(() => {\n                  this.setState({ errors: \"\" });\n            }, 5000);\n\n\n            return isValid;\n      }\n\n      handleSubmit = (event) => {\n            event.preventDefault();\n\n            if (this.checkValidation()) {\n                  const fd = new FormData();\n                  const { showPopUP, errors, image, ...user } = this.state;\n\n                  buildFormData(fd, user);\n\n                  if (this.imageRef.current.files[0]) {\n                        fd.append(\"image\", this.imageRef.current.files[0]);\n                  }\n\n                  apiHandler.updateProfile(fd)\n                        .then(data => {\n                              console.log(data)\n                              if (data.message === \"Email already taken\") {\n                                    this.setState(prevState => ({\n                                          errors: { ...prevState.errors, err_submit: \"Email already taken\", err_email: \"Email already taken\" }\n                                    }));\n                              }\n                              else if (data.message === \"Please make your password at least 6 characters, that contains at least one uppercase, one lowercase and one number digit in it, for security purposes.\") {\n                                    this.setState(prevState => ({\n                                          errors: { ...prevState.errors, err_submit: \"Check your new password\", err_password: \"Please make your password at least 6 characters, that contains at least one uppercase, one lowercase and one number digit in it, for security purposes.\" }\n                                    }));\n                              } else {\n\n                                    this.context.setUser(data);\n                                    setTimeout(() => {\n                                          this.setState({ showPopUP: true });\n                                    }, 1000);\n                              }\n\n                        })\n                        .catch(err => {\n                              this.setState(prevState => ({\n                                    errors: { ...prevState.errors, err_submit: err.message }\n                              }));\n                        })\n\n            } else {\n                  this.setState(prevState => ({\n                        errors: { ...prevState.errors, err_submit: \"Please check again your information!\" }\n                  }));\n            }\n\n      }\n\n      render() {\n\n            const { errors } = this.state;\n            const { err_lastName, err_firstName, err_email, err_password, err_submit, err_birthday } = errors;\n            // console.log(\"lala\", this.state?.user?.lastName)\n            return (\n                  this.state.user ?\n                        <div>\n                              <h1>Edit your profile</h1>\n\n                              <form onSubmit={this.handleSubmit} style={{ display: 'flex', flexDirection: \"column\" }}>\n                                    {err_submit && <p className=\"failure\">{err_submit}</p>}\n                                    <div className=\"block\">\n                                          <h2>Profile status</h2>\n                                          {this.state.user.isProvider\n                                                ? <h3>Your profile appears in the search results</h3>\n                                                : <h3>Your profile does not appear in the search results yet</h3>\n                                          }\n                                    </div>\n\n                                    <br></br>\n                                    <br></br>\n                                    <div className=\"block\">\n                                          <img src={this.state.image || this.context.user.image} alt={this.state.user.firstName} />\n                                          <div className=\"form-group\">\n                                                <UploadWidget\n                                                      onFileSelect={this.handleFileSelect}\n                                                      name=\"image\"\n                                                      ref={this.imageRef}\n                                                >\n                                                      Upload image\n                                          </UploadWidget>\n                                          </div>\n                                    </div>\n\n\n                                    <br></br>\n                                    <br></br>\n                                    <div className=\"block\">\n\n                                          <div className=\"form-group\">\n                                                <label className='label' htmlFor=\"firstName\">First Name</label>\n                                                <input\n                                                      className={err_firstName ? \"input failure\" : 'input success'}\n                                                      id=\"firstName\"\n                                                      type=\"text\"\n                                                      name=\"firstName\"\n                                                      value={this.state.user.firstName}\n                                                      onChange={this.handleChange}\n                                                />\n                                                {err_firstName && <p className=\"failure\">{err_firstName}</p>}\n                                          </div>\n\n                                          <div className=\"form-group\">\n                                                <label className='label' htmlFor=\"lastName\">Last name</label>\n                                                <input\n                                                      className={err_lastName ? \"input failure\" : 'input success'}\n                                                      id=\"lastName\"\n                                                      type=\"text\"\n                                                      name=\"lastName\"\n                                                      value={this.state.user.lastName}\n                                                      onChange={this.handleChange}\n                                                />\n                                                {err_lastName && <p className=\"failure\">{err_lastName}</p>}\n                                          </div>\n\n\n                                          <div className=\"form-group\">\n                                                <label className='label' htmlFor=\"birthday\">Date of birth yyyy/mm/dd</label>\n                                                <BirthdayFields\n                                                      birthdayValue={this.state.user.birthday && this.state.user.birthday}\n                                                      handleBirthday={this.handleBirthday}\n                                                      className={err_birthday ? \"input failure\" : 'input success'}\n                                                />\n                                                {err_birthday && <p className=\"failure\">{err_birthday}</p>}\n                                          </div>\n\n                                          <div className=\"form-group\">\n                                                <label className='label' htmlFor=\"email\">Email</label>\n                                                <input\n                                                      className={err_email ? \"input failure\" : 'input success'}\n                                                      id=\"email\"\n                                                      type=\"text\"\n                                                      name=\"email\"\n                                                      value={this.state.user.email}\n                                                      onChange={this.handleChange}\n                                                />\n                                                {err_email && <p className=\"failure\">{err_email}</p>}\n                                          </div>\n\n                                          <div className=\"form-group\">\n                                                <label className='label' htmlFor=\"password\">Password</label>\n                                                <input\n                                                      className={err_password ? \"input failure\" : 'input success'}\n                                                      id=\"password\"\n                                                      type=\"password\"\n                                                      name=\"password\"\n                                                      value={this.state.user.password}\n                                                      onChange={this.handleChange}\n                                                      placeholder=\"*********\"\n                                                />\n                                                {err_password && <p className=\"failure\">{err_password}</p>}\n                                          </div>\n\n                                    </div>\n\n                                    <br></br>\n                                    <br></br>\n                                    <div className=\"block\">\n                                          <div className=\"form-group\">\n                                                <label className='label' htmlFor=\"formattedAddress\">Address</label>\n                                                {this.context.user.formattedAddress &&\n                                                      (<div>\n                                                            <p>Your current address: {this.context.user.formattedAddress}</p>\n                                                            <p>Change your address:</p>\n                                                      </div>\n                                                      )}\n                                                <AutoComplete\n                                                      onSelect={this.handlePlace}\n                                                />\n                                          </div>\n\n                                          <div className=\"form-group\">\n                                                <label className='label' htmlFor=\"phoneNumber\">Phone Number</label>\n                                                <input\n                                                      id=\"phoneNumber\"\n                                                      type=\"text\"\n                                                      name=\"phoneNumber\"\n                                                      required=\"required\"\n                                                      value={this.state.user.phoneNumber}\n                                                      onChange={this.handleChange}\n                                                      placeholder=\"06.90.60.90\"\n                                                />\n                                          </div>\n\n                                    </div>\n\n                                    <br></br>\n                                    <br></br>\n                                    <div className=\"block\">\n                                          <h2>About me</h2>\n                                          <div className=\"form-group\">\n                                                <label className='label' htmlFor=\"description\">Description</label>\n                                                <textarea\n                                                      rows=\"10\"\n                                                      id=\"description\"\n                                                      type=\"text\"\n                                                      name=\"description\"\n                                                      value={this.state.user.description}\n                                                      onChange={this.handleChange}\n                                                />\n                                          </div>\n\n                                    </div>\n\n                                    <br></br>\n                                    <br></br>\n                                    <div className=\"block\">\n                                          <h2>Experiences & Skills</h2>\n\n                                          <div className=\"form-group\">\n                                                <div className=\"form-group\">\n                                                      <label className='label' htmlFor=\"experiences\">Experiences</label>\n                                                      <textarea\n                                                            rows=\"10\"\n                                                            id=\"experiences\"\n                                                            type=\"text\"\n                                                            name=\"experiences\"\n                                                            value={this.state.user.experiences}\n                                                            onChange={this.handleChange}\n                                                      />\n                                                </div>\n                                          </div>\n                                    </div>\n\n                                    <br></br>\n                                    <br></br>\n                                    <div className=\"block\">\n                                          <h2>Everyone can view my profile</h2>\n                                          <div className=\"form-group\">\n                                                <VisibilityField\n                                                      defaultValue={this.state.user.isProvider}\n                                                      handleVisibility={this.handleVisibility}\n                                                />\n                                          </div>\n\n                                    </div>\n\n                                    <br></br>\n                                    <br></br>\n                                    <div className=\"block\">\n                                          <h2>I find a job/jobs at</h2>\n                                          <div className=\"form-group\">\n                                                <Services\n                                                      defaultValue={this.state.user.service}\n                                                      handleServices={this.handleServices}\n\n                                                />\n                                          </div>\n\n                                          <h2>I'm comfortable with:</h2>\n                                          <div className=\"form-group\">\n\n                                                <OtherServices\n                                                      defaultValue={this.state.user.additionalServices}\n                                                      handleServices={this.handleAdditionalServices}\n\n                                                />\n                                          </div>\n                                    </div>\n\n\n\n                                    <br></br>\n                                    <br></br>\n                                    <div className=\"block\">\n                                          <h2>Availability</h2>\n                                          <div className=\"form-group\">\n                                                <input\n                                                      id=\"availability\"\n                                                      type=\"text\"\n                                                      name=\"availability\"\n                                                      value={this.state.user.availability}\n                                                      onChange={this.handleChange}\n                                                />\n                                          </div>\n\n                                    </div>\n\n                                    <button onClick={this.handleClick}>Edit</button>\n\n                              </form>\n                              {this.state.showPopUP\n                                    && <PopUp message=\"Successfully updated your profile!\"\n                                          btnOne={this.context.user.isProvider && \"Your Page\"}\n                                          handleBtnOne={() => {\n                                                // the user has a public page \n                                                this.props.history.push(`/provider/${this.context.user._id}`)\n                                          }}\n                                          btnTwo=\"Dashboard\"\n                                          handleBtnTwo={() => {\n                                                this.props.history.push(\"/profile\")\n                                                window.location.reload();\n                                          }}\n                                    />}\n                        </div>\n                        : <h1>Loading ...</h1>\n            )\n\n      }\n}\n\nexport default withRouter(EditProfile)","import React, { Component } from 'react'\nimport Dashboard from '../components/Profile/Dashboard';\nimport EditProfile from '../components/Profile/EditProfile';\nimport \"../styles/Profile.css\"\n\n\nexport default class Profile extends Component {\n      render() {\n            return (\n                  <div>\n                        <div>\n\n                              <div className=\"profile_radio\">\n                                    <label htmlFor=\"dashboard\">Dashboard</label>\n                                    <input type=\"radio\" id=\"dashboard\" value=\"Dashboard\" name=\"profile\" defaultChecked/>\n                                    <Dashboard />\n                              </div>\n\n\n\n                              <div className=\"profile_radio\">\n                                    <label htmlFor=\"edit\">Edit your profile</label>\n                                    <input type=\"radio\" id=\"edit\" value=\"Edit Profile\" name=\"profile\" />\n                                    <EditProfile />\n                              </div>\n\n\n                        </div>\n\n                  </div>\n            )\n      }\n}\n","import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom';\nimport apiHandler from '../api/apiHandler';\nimport UserContext from '../components/Auth/UserContext';\nimport ButtonAddFavoriteList from '../components/ButtonAddFavoriteList';\nimport Autocomplete from '../components/Map/AutoComplete';\nimport MapSearch from '../components/Map/MapSearch';\nimport { averageRates } from '../utils';\nimport Rating from \"../components/Rate/Rating\"\nimport FormMessage from '../components/Message/FormMessage';\n\nexport default class Providers extends Component {\n      static contextType = UserContext;\n      state = {\n            list: [],\n            searchCoordinates: []\n\n      }\n      componentDidMount() {\n            const service = this.props.match.params.service;\n            apiHandler.getProvidersByService(service)\n                  .then(data => this.setState({ list: data }))\n                  .catch(err => console.log(err))\n      }\n      handleSelect = (place) => {\n            this.setState({ searchCoordinates: place.geometry })\n      }\n      render() {\n            // console.log(\"check list\", this.state.list[1]?.reviews)\n            const rev = []\n            // console.log(\"average\", averageRates(rev));\n            return (\n                  <div>\n                        <div style={{ marginBottom: \"5rem\" }}>\n                              <h3>Find providers near by your location</h3>\n                              <Autocomplete onSelect={this.handleSelect} />\n\n                        </div>\n\n                        <div>\n                              <MapSearch\n                                    list={this.state.list}\n                                    search={this.state.searchCoordinates && this.state.searchCoordinates} />\n                        </div>\n\n\n                        <div>\n                              {this.state.list?.map(({ image, firstName, description, _id, reviews }, id) => (\n\n                                    <div className=\"block\" key={id} style={{ display: \"flex\" }}>\n                                          <NavLink to={`/provider/${_id}`} target={\"_blank\"}>\n                                                <img src={image} alt={firstName} />\n                                          </NavLink>\n                                          <div>\n                                                <NavLink to={`/provider/${_id}`} target={\"_blank\"}>\n                                                      <h3>{firstName}</h3>\n                                                      <p>{description.substring(0, 100)}...</p>\n                                                </NavLink>\n\n                                                <Rating rate={averageRates(reviews) && averageRates(reviews)} />\n\n\n                                                <ButtonAddFavoriteList idProvider={_id} />\n                                                <FormMessage idReceiver={_id} />\n                                          </div>\n\n\n                                    </div>\n\n                              ))}\n                        </div>\n\n\n                  </div >\n            )\n      }\n}\n","import React, { Component } from 'react';\nimport { Link, Redirect } from \"react-router-dom\";\nimport apiHandler from '../../api/apiHandler';\nimport UserContext from '../Auth/UserContext';\nimport \"../../styles/FormSignup.css\"\n\nexport default class FormSignup extends Component {\n\tstatic contextType = UserContext;\n\n\tstate = {\n\t\tfirstName: 'Anita',\n\t\tlastName: 'LE',\n\t\tpassword: 'Tran123',\n\t\temail: 'lena@gmail.com',\n\t\terrors: {\n\t\t\terr_firstName: '',\n\t\t\terr_lastName: '',\n\t\t\terr_password: '',\n\t\t\terr_email: '',\n\t\t\terr_submit: ''\n\t\t},\n\n\t}\n\n\thandleChange = (event) => {\n\t\tconst { value, name } = event.target;\n\t\tthis.setState({ [name]: value });\n\t}\n\n\tcheckValidation = () => {\n\t\tconst { lastName, firstName, email, password } = this.state;\n\t\tlet isValid = true;\n\t\tlet errors = {};\n\n\t\t//check email\n\t\tif (!email) {\n\t\t\terrors.err_email = 'Please enter your email correctly';\n\t\t\tisValid = false;\n\t\t} else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n\t\t\terrors.err_email = 'Email address is invalid';\n\t\t\tisValid = false;\n\t\t}\n\n\t\t//check password\n\t\tif (!password) {\n\t\t\tisValid = false;\n\t\t\terrors.err_password = 'Please enter your password';\n\t\t} else if (password.length < 6) {\n\t\t\tisValid = false;\n\t\t\terrors.err_password = \"Enter a password, minimum of 6 characters, 1 uppercase, 1 lowercase and 1 number digit\";\n\t\t}\n\n\t\t//check name\n\t\tif (!firstName) {\n\t\t\tisValid = false;\n\t\t\terrors.err_firstName = 'Please enter your first name';\n\t\t}\n\n\t\tif (!lastName) {\n\t\t\tisValid = false;\n\t\t\terrors.err_lastName = 'Please enter your last name';\n\t\t}\n\n\t\tthis.setState({ errors });\n\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({ errors: \"\" });\n\t\t}, 5000);\n\n\t\treturn isValid;\n\n\t}\n\n\thandleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tif (this.checkValidation()) {\n\t\t\tconst { errors, ...data } = this.state;\n\t\t\tconsole.log(errors)\n\t\t\tconsole.log(data)\n\t\t\tapiHandler.signup(data)\n\t\t\t\t.then(data => {\n\t\t\t\t\tthis.context.setUser(data);\n\t\t\t\t})\n\t\t\t\t.catch(err => this.setState(prevState => ({\n\t\t\t\t\terrors: { ...prevState.errors, err_submit: err.message }\n\t\t\t\t})))\n\n\t\t} else {\n\t\t\tthis.setState(prevState => ({\n\t\t\t\terrors: { ...prevState.errors, err_submit: \"Try again!\" }\n\t\t\t}));\n\t\t}\n\t}\n\n\trender() {\n\t\tif (this.context.isLoggedIn) return <Redirect to=\"/\" />;\n\n\t\tconst { lastName, firstName, email, password, errors } = this.state;\n\t\tconst { err_lastName, err_firstName, err_email, err_password, err_submit } = errors;\n\n\t\treturn (\n\t\t\t<section>\n\t\t\t\t<header>\n\t\t\t\t\t<h1>Sign up</h1>\n\t\t\t\t</header>\n\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label className='label' htmlFor=\"firstName\">First Name</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={err_firstName ? \"input failure\" : 'input success'}\n\t\t\t\t\t\t\tid=\"firstName\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"firstName\"\n\t\t\t\t\t\t\tvalue={firstName}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{err_firstName && <p className=\"failure\">{err_firstName}</p>}\n\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label className='label' htmlFor=\"lastName\">Last name</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={err_lastName ? \"input failure\" : 'input success'}\n\t\t\t\t\t\t\tid=\"lastName\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"lastName\"\n\t\t\t\t\t\t\tvalue={lastName}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{err_lastName && <p className=\"failure\">{err_lastName}</p>}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label className='label' htmlFor=\"email\">Email</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={err_email ? \"input failure\" : 'input success'}\n\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{err_email && <p className=\"failure\">{err_email}</p>}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label className='label' htmlFor=\"password\">Password</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={err_password ? \"input failure\" : 'input success'}\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{err_password && <p className=\"failure\">{err_password}</p>}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button className=\"btn-submit\">Sign up</button>\n\t\t\t\t\t{err_submit && <p className=\"failure\">{err_submit}</p>}\n\t\t\t\t</form>\n\n\t\t\t\t<div>\n\t\t\t\t\t<p>Already have an account? <Link to=\"/login\"><strong>Log in</strong></Link> </p>\n\t\t\t\t</div>\n\t\t\t</section>\n\n\t\t)\n\t}\n}\n","import React, { Component } from 'react'\nimport FormSignup from '../components/FormsAuth/FormSignup'\n\nexport default class Signup extends Component {\n      render() {\n            return (\n                  <div>\n                        <FormSignup />\n                  </div>\n            )\n      }\n}\n","import React, { Component } from 'react'\nimport { Route, Switch } from \"react-router-dom\";\nimport NewAnnouncement from './components/Announcement/NewAnnouncement';\nimport ProtectRoute from './components/Auth/ProtectRoute';\nimport NavMain from './components/NavMain/NavMain';\nimport AddReview from './pages/AddReview';\nimport Announcements from './pages/Announcements';\nimport Home from './pages/Home';\nimport Login from './pages/Login';\nimport Messages from './pages/Messages';\nimport OneAnnounce from './pages/OneAnnounce';\nimport OneProvider from './pages/OneProvider';\nimport Profile from './pages/Profile';\nimport Providers from './pages/Providers';\nimport Signup from './pages/Signup';\n\n\nexport default class App extends Component {\n  state = {\n\n  }\n  render() {\n    return (\n      <div>\n        <NavMain />\n\n        <Switch>\n          {/* AUTH  */}\n          <Route exact path=\"/\" component={Home} />\n          <ProtectRoute exact path=\"/profile\" component={Profile} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route exact path=\"/login\" component={Login} />\n\n          {/* Announcement  */}\n          <ProtectRoute exact path=\"/announcements/new\" component={NewAnnouncement} />\n          <ProtectRoute exact path=\"/announcements/edit/:idPost\" component={NewAnnouncement} />\n          <Route exact path=\"/announcements/:service/s\" component={Announcements} />\n          <Route exact path=\"/announcements/:idAnnouncement\" component={OneAnnounce} />\n\n\n          {/* Provider  */}\n          <Route exact path=\"/providers/:service/s\" component={Providers} />\n          <Route exact path=\"/provider/:idProvider\" component={OneProvider} />\n          <ProtectRoute exact path=\"/provider/:idProvider/review\" component={AddReview} />\n\n          {/* Message  */}\n          <ProtectRoute exact path=\"/message/:idMessage\" component={Messages} />\n        </Switch>\n\n\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler'\nimport UserContext from './UserContext';\n\nexport default class UserProvider extends Component {\n      state = {\n            user: null,\n            isLoggedIn: false,\n            isLoading: true,\n      }\n\n      componentDidMount() {\n            apiHandler\n                  .isLoggedIn()\n                  .then(data => {\n                        this.setState({ user: data, isLoggedIn: true, isLoading: false })\n                  })\n                  .catch(error => {\n                        console.log(error);\n                        this.setState({ isLoading: false })\n                  })\n      }\n\n      removeUser = () => {\n            apiHandler.logout()\n                  .then(() => {\n                        this.setState({ user: null, isLoggedIn: false, isLoading: true });\n                        setTimeout(() => {\n                              this.setState({ isLoading: false });\n                        }, 3000);\n                  })\n                  .catch(err => console.log(err))\n      }\n\n      setUser = (userInfo) => {\n            this.setState({ user: userInfo, isLoggedIn: true, isLoading: false })\n      }\n\n      render() {\n            const contextValue = {\n                  user: this.state.user,\n                  isLoggedIn: this.state.isLoggedIn,\n                  isLoading: this.state.isLoading,\n                  removeUser: this.removeUser,\n                  setUser: this.setUser,\n            }\n            return (\n                  <div>\n                        <UserContext.Provider value={contextValue}>\n                              {this.props.children}\n                        </UserContext.Provider>\n                  </div>\n            )\n      }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport UserProvider from './components/Auth/UserProvider';\nimport { BrowserRouter } from 'react-router-dom';\nimport \"./styles/index.css\";\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <UserProvider>\n      <App />\n    </UserProvider>\n  </BrowserRouter>\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}